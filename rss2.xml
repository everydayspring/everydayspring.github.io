<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>이봄의 새싹</title>
    <link>http://everydayspring.github.io/</link>
    
    <atom:link href="/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>이봄의 새싹 블로그 매일 배우는 중입니다</description>
    <pubDate>Thu, 06 May 2021 05:51:43 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>꿈은 늘 커요</title>
      <link>http://everydayspring.github.io/2021/05/06/etc-2021-05-06-0/</link>
      <guid>http://everydayspring.github.io/2021/05/06/etc-2021-05-06-0/</guid>
      <pubDate>Thu, 06 May 2021 05:19:20 GMT</pubDate>
      <description>
      
        블로그
기술 블로그가 아닌 맛집 블로그에서 덕질 블로그로 변질한 티스토리…

좀좀따리로 수익이 생기더니 몇년만에 100불을 달성했다

더 꾸준히 써야지…

유튜브
1년….(좀 많이 안되게) 열심히 굴렸던 유튜브…

일하면서 여유도 조금 있었고 (돈X, 시간O)

사부작사부작 영상만들기가 재미있어서 여행기도 올리고 했었는데

바쁜거 반, 귀찮은거 반 해서 100% 안하고 있다…

종종 만나는 사람들이 왜 안하냐고 물어보는데 나도 궁금합니다….

6월마저 가기전에 하나는 꼭 올려야지

대학원
강의
어쨌든 학생이니까 강의 듣고 과제하고 
      
      </description>
      
      
      <content:encoded><![CDATA[<h2 id="블로그"><a href="#블로그" class="headerlink" title="블로그"></a>블로그</h2><p>기술 블로그가 아닌 맛집 블로그에서 덕질 블로그로 변질한 티스토리…</p><p>좀좀따리로 수익이 생기더니 몇년만에 100불을 달성했다</p><p>더 꾸준히 써야지…</p><h2 id="유튜브"><a href="#유튜브" class="headerlink" title="유튜브"></a>유튜브</h2><p>1년….(좀 많이 안되게) 열심히 굴렸던 유튜브…</p><p>일하면서 여유도 조금 있었고 (돈X, 시간O)</p><p>사부작사부작 영상만들기가 재미있어서 여행기도 올리고 했었는데</p><p>바쁜거 반, 귀찮은거 반 해서 100% 안하고 있다…</p><p>종종 만나는 사람들이 왜 안하냐고 물어보는데 나도 궁금합니다….</p><p>6월마저 가기전에 하나는 꼭 올려야지</p><h2 id="대학원"><a href="#대학원" class="headerlink" title="대학원"></a>대학원</h2><h4 id="강의"><a href="#강의" class="headerlink" title="강의"></a><strong>강의</strong></h4><p>어쨌든 학생이니까 강의 듣고 과제하고 시험을 본다</p><p>비대면은 강의장 안찾아가도 되서 좋긴 한데</p><p>시스템으로 출석챙기는거 영쉽지않다</p><p>나 스스로를 못믿어서 하루에 한번씩 모든과목을 체크하는데 </p><p>심지어 빼먹은것들이 꼭 있어서 적응을 못하는중…</p><h4 id="조교"><a href="#조교" class="headerlink" title="조교"></a><strong>조교</strong></h4><p>이번년도 가장 어리석은 선택</p><p>돈에 속아 두반이나 맡아서 채점으로 일주일에 이틀씩 잡아먹는중</p><p>시험기간에는 시험 보는데 이틀잡아먹고 채점하는데 나흘은 잡아먹는다</p><p>뭘그렇게 잡아먹어..</p><h4 id="교수님-조교"><a href="#교수님-조교" class="headerlink" title="교수님 조교"></a><strong>교수님 조교</strong></h4><p>연구실 교수님 출강 조교</p><p>이건 아직 바쁘진 않지만 강의 할때 못하면 큰일 나기 때문에 열심히 공부중</p><h4 id="영어시험"><a href="#영어시험" class="headerlink" title="영어시험"></a><strong>영어시험</strong></h4><p>졸업조건 영어시험을 이번 여름에 미리 처리하는 계획을 세우긴 했는데</p><p>이 죽일놈의 영어울렁증</p><p>개발하면 하루종일 영어로된 코드만 보는데 영어 울렁증이 뭐람</p><p>한번에 꼭 처리할것….</p><h2 id="초등학생-캠프"><a href="#초등학생-캠프" class="headerlink" title="초등학생 캠프"></a>초등학생 캠프</h2><p>2회차까지 진행된 초등학생 캠프 3회도 맡게 되어서 감사한 마음으로 준비할 예정</p><p>8월에 하기 때문에 여유 있으나 여유부리다 얻어맞는 수가 있음…</p><p>미리 미리 준비할 것…</p><h2 id="강의-제작-외주"><a href="#강의-제작-외주" class="headerlink" title="강의 제작 외주"></a>강의 제작 외주</h2><p>이름은 거창하나 개인적으로 맡는일</p><p>잘해야 또 맡을 수 있기때문에 잘할것….</p><p>열심히는 중요하지 않음….</p><h2 id="덕질"><a href="#덕질" class="headerlink" title="덕질"></a>덕질</h2><p>또 이렇게나 진심이 되어버린 덕질…</p><p>8월에 생일카페를… 생일카페를 해버리네…</p><h2 id="운동"><a href="#운동" class="headerlink" title="운동"></a>운동</h2><p>이번주에 옷사고 마라탕먹고 갑자기 운동을 등록했다</p><p>진짜 갑자기 pt 30회를 끊어버려서</p><p>30회 동안 열심히 운동을 조져야한다….</p><p>목표는 50키로 초반</p><p>늘 47키로가 목표라고 했는데 현실과 타협함….</p><h2 id="깃블로그"><a href="#깃블로그" class="headerlink" title="깃블로그"></a>깃블로그</h2><p>1일 1커밋을 크게 써서 모니터에 붙였으나</p><p>볼때마다 양심에 찔리기만 하고 실천은 잘 못하는 중…</p><p>블록체인 꾸준히 올리고 논문도 보고</p><p>수업 한바퀴 돌면 알고리즘도 꾸준히 할 예정은 있음…</p><h2 id="취미"><a href="#취미" class="headerlink" title="취미"></a>취미</h2><p>드럼이나…. 보컬 수업을 한번은 들어보고싶은데</p><p>우선 pt를 30회를 진행하는데 지출을 해서</p><p>하반기로 슥 미뤄버림….</p>]]></content:encoded>
      
      <comments>http://everydayspring.github.io/2021/05/06/etc-2021-05-06-0/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Blockchain History (작성중)</title>
      <link>http://everydayspring.github.io/2021/05/04/Blockchain-2021-05-04-0/</link>
      <guid>http://everydayspring.github.io/2021/05/04/Blockchain-2021-05-04-0/</guid>
      <pubDate>Tue, 04 May 2021 08:05:48 GMT</pubDate>
      <description>
      
        Financial Arrangements: Credit and Cash
Genesis Block and The Times Headline
 * 2009.01.03 The Times 잡지
 * Mortgage default crisis(2007 ~ 2008)

Traditional Financial Arrangements
 * 물물교환(Barter)

Credit and Cash
 * 신용 기반 시스템(Credit-based system) : 외상 거래
 * 화폐 기반 시스템(Cash-based system) : 지불에 의한 거래 *
      
      </description>
      
      
      <content:encoded><![CDATA[<h2 id="Financial-Arrangements-Credit-and-Cash"><a href="#Financial-Arrangements-Credit-and-Cash" class="headerlink" title="Financial Arrangements: Credit and Cash"></a>Financial Arrangements: Credit and Cash</h2><h4 id="Genesis-Block-and-The-Times-Headline"><a href="#Genesis-Block-and-The-Times-Headline" class="headerlink" title="Genesis Block and The Times Headline"></a>Genesis Block and The Times Headline</h4><ul><li>2009.01.03 The Times 잡지</li><li>Mortgage default crisis(2007 ~ 2008)</li></ul><h4 id="Traditional-Financial-Arrangements"><a href="#Traditional-Financial-Arrangements" class="headerlink" title="Traditional Financial Arrangements"></a>Traditional Financial Arrangements</h4><ul><li>물물교환(Barter)</li></ul><h4 id="Credit-and-Cash"><a href="#Credit-and-Cash" class="headerlink" title="Credit and Cash"></a>Credit and Cash</h4><ul><li>신용 기반 시스템(Credit-based system) : 외상 거래</li><li>화폐 기반 시스템(Cash-based system) : 지불에 의한 거래<ul><li>채무불이행 리스크 불필요</li><li>익명성</li><li>오프라인 거래 가능</li></ul></li></ul><h4 id="Bitcoin-and-Cash"><a href="#Bitcoin-and-Cash" class="headerlink" title="Bitcoin and Cash"></a>Bitcoin and Cash</h4><ul><li>채무불이행 리스크 불필요</li><li>익명성 제공, Cash 만큼은 아님</li><li>오프라인 거래 불가능</li></ul><h4 id="Functions-of-Money"><a href="#Functions-of-Money" class="headerlink" title="Functions of Money"></a>Functions of Money</h4><ul><li>교환, 거래의 매개체(Medium of exchange)</li><li>가치 측정의 척도(Medium of value)</li><li>가치 저장의 수단(Store of value)</li></ul><h4 id="Money-vs-Cryptocurrency"><a href="#Money-vs-Cryptocurrency" class="headerlink" title="Money vs Cryptocurrency"></a>Money vs Cryptocurrency</h4><ul><li>Ancient money<ul><li>stones, bones</li><li>shells</li><li>knives, spades, coins</li></ul></li><li>Modern money and payment tools<ul><li>법정화폐(Fiat money) : 정부에서 발행하는 화폐(지폐), 화폐 자체의 내제적 가치는 없음</li><li>전자거래 시스템 : 신용카드, debit card</li><li>gift card, voucher, …</li></ul></li><li>암호화폐(Cryptocurrency)<ul><li>법정화폐와 전자거래 시스템의 중간</li><li>중앙화된 은행의 제어 없이 탈중앙화된 신뢰에 근간하여 발행</li></ul></li></ul><hr><h2 id="Credit-based-Electronic-Payments"><a href="#Credit-based-Electronic-Payments" class="headerlink" title="Credit-based Electronic Payments"></a>Credit-based Electronic Payments</h2><ul><li>1990년대 전자거래의 등장</li></ul><h4 id="Intermediary-Architecture"><a href="#Intermediary-Architecture" class="headerlink" title="Intermediary Architecture"></a>Intermediary Architecture</h4><ul><li>중개회사가 소비자와 상인사이에서 카드 정보를 이용하여 결재를 진행</li><li>email을 이용하여 정보를 주고받음(실제 지불까지 시간이 오래걸림)</li><li>FirstVirtual(1994)</li></ul><h4 id="SET-Architecture"><a href="#SET-Architecture" class="headerlink" title="SET Architecture"></a>SET Architecture</h4><ul><li>정보를 <strong>암호화</strong>하여 판매자에게 전송</li><li>VISA, MasterCard</li></ul><h4 id="CyberCoin"><a href="#CyberCoin" class="headerlink" title="CyberCoin"></a>CyberCoin</h4><ul><li>소액 결제 시스템</li></ul><h4 id="SET-and-Certificate-Issue"><a href="#SET-and-Certificate-Issue" class="headerlink" title="SET and Certificate Issue"></a>SET and Certificate Issue</h4><ul><li></li></ul><hr><h2 id="Electronic-Money"><a href="#Electronic-Money" class="headerlink" title="Electronic Money"></a>Electronic Money</h2>]]></content:encoded>
      
      <comments>http://everydayspring.github.io/2021/05/04/Blockchain-2021-05-04-0/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Blockchain 암호학</title>
      <link>http://everydayspring.github.io/2021/04/16/Blockchain-2021-04-16-0/</link>
      <guid>http://everydayspring.github.io/2021/04/16/Blockchain-2021-04-16-0/</guid>
      <pubDate>Fri, 16 Apr 2021 02:17:27 GMT</pubDate>
      <description>
      
        암호학의 필요성
 * 법정화폐 대비 전자화폐의 차이점 * 중앙은행과 같은 화폐 발행의 권한(authority) 부재(탈중앙화)
    * 위변조를 방지하기 위한 법률적, 실물적 장치 부재(법정화폐에는 다양한 위변조 방지 장치가 되어있음)
    * 이중지불(double spending) 용이성
   
   
 * 블록체인에서 암호학의 역할 * Cryptographic puzzle : 화폐 발행의 권한 부여 및 검증(퍼즐을 푼 사람만이 발행할 수 있음)
    * Hash &amp; digital signature : 위변조 방지
    *
      
      </description>
      
      
      <content:encoded><![CDATA[<h2 id="암호학의-필요성"><a href="#암호학의-필요성" class="headerlink" title="암호학의 필요성"></a>암호학의 필요성</h2><ul><li>법정화폐 대비 전자화폐의 차이점<ul><li>중앙은행과 같은 화폐 발행의 권한(authority) 부재(탈중앙화)</li><li>위변조를 방지하기 위한 법률적, 실물적 장치 부재(법정화폐에는 다양한 위변조 방지 장치가 되어있음)</li><li>이중지불(double spending) 용이성</li></ul></li><li>블록체인에서 암호학의 역할<ul><li>Cryptographic puzzle : 화폐 발행의 권한 부여 및 검증(퍼즐을 푼 사람만이 발행할 수 있음)</li><li>Hash &amp; digital signature : 위변조 방지</li><li>Digital signature(&amp; consensus) : 이중지불 방지</li></ul></li></ul><h4 id="정보보호의-CIA-Triad-세가지-원칙"><a href="#정보보호의-CIA-Triad-세가지-원칙" class="headerlink" title="정보보호의 CIA Triad(세가지 원칙)"></a>정보보호의 CIA Triad(세가지 원칙)</h4><ul><li>Confidentiality(기밀성) : 정보의 유출 방지</li><li>Integrity(무결성) : 정보의 신뢰성</li><li>Availability(가용성) : 서비스의 지속 유지성</li></ul><blockquote><p><strong>용어 정리</strong><br>평문(plaintext) : 암호화하기 전의 메시지<br>암호문(ciphertext) : 암호화한 후의 메시지<br>암호화(encryption) : 평문을 암호문으로 바꾸는 것<br>복호화(decryption) : 암호문을 평문으로 바꾸는 것<br>키(key) : 암호화 및 복호화에 사용되는 정보</p></blockquote><hr><h2 id="고전-암호-알고리즘"><a href="#고전-암호-알고리즘" class="headerlink" title="고전 암호 알고리즘"></a>고전 암호 알고리즘</h2><p>크게 치환 또는 전치, 두가지 기법을 사용</p><ul><li>스트림 암호 : 한 문자씩 암호 알고리즘에 입력되어 한 문자씩 생성</li><li>블록 암호 : M개의 문자가 함께 암호화되어 N개의 암호문 생성</li></ul><h4 id="시저-암호"><a href="#시저-암호" class="headerlink" title="시저 암호"></a>시저 암호</h4><ul><li>알파벳을 일정한 문자 수 만큼 평행 이동(Shift)시키는 암호 기법</li><li>치환 암호의 일종</li><li>모든 가능한 키를 시도하는 전사공격에 의해 해독 가능</li><li>덧셈암호</li></ul><h4 id="단일문자-치환-암호-monoalphabetic-substitution"><a href="#단일문자-치환-암호-monoalphabetic-substitution" class="headerlink" title="단일문자 치환 암호(monoalphabetic substitution)"></a>단일문자 치환 암호(monoalphabetic substitution)</h4><ul><li>알파벳을 다른 알파벳으로 변환하는 암호 기법</li><li>전사공격 시간 26!</li><li>평문에 등장하는 문자의 빈도와 암호문에 나오는 문자의 빈도가 일치하는 것을 이용하는 빈도공격으로 해독 가능</li></ul><h4 id="아핀-Affine-암호"><a href="#아핀-Affine-암호" class="headerlink" title="아핀(Affine) 암호"></a>아핀(Affine) 암호</h4><ul><li>덧셈암호 + 곱셈암호</li></ul><h4 id="다중문자-치환-암호-polyalphabetic-cubstitution"><a href="#다중문자-치환-암호-polyalphabetic-cubstitution" class="headerlink" title="다중문자 치환 암호(polyalphabetic cubstitution)"></a>다중문자 치환 암호(polyalphabetic cubstitution)</h4><ul><li>다중문자를 이용하여 문자의 발생빈도를 균일화하는 암호 기법</li><li>문자의 위치에 따라 같은 문자라도 다른 문자로 치환(일대다대응)<br>ex. 비제너(Vigenere) 암호</li></ul><h4 id="전치-암호-transposition"><a href="#전치-암호-transposition" class="headerlink" title="전치 암호(transposition)"></a>전치 암호(transposition)</h4><ul><li>문자의 위치를 바꾸는 암호 기법</li><li>정해진 크기로 평문을 나눈 뒤, 치환키를 사용하여 문자 위치를 바꾸는 기법</li></ul><hr><h2 id="현대-대칭키-암호"><a href="#현대-대칭키-암호" class="headerlink" title="현대 대칭키 암호"></a>현대 대칭키 암호</h2><ul><li>고전 대칭키 암호 : 문자(character) 기반의 암호</li><li>현대 대칭키 암호 : 비트(bit) 기반의 암호, 암호 대상이 텍스트에서 그래픽, 오디오, 비디오 등으로 확대</li></ul><h4 id="현대-블록-암호의-구성요소"><a href="#현대-블록-암호의-구성요소" class="headerlink" title="현대 블록 암호의 구성요소"></a>현대 블록 암호의 구성요소</h4><ul><li>P-박스 : 비트의 위치를 바꾸는 기능(permutation)</li><li>S-박스 : 비트를 치환하는 기능(substitution)</li><li>순환이동</li><li>스왑연산</li><li>배타적 논리합 연산(Exclusive-OR) : A ⊕ B ⊕ B = A</li></ul><h4 id="DES-Data-Encryption-Standard"><a href="#DES-Data-Encryption-Standard" class="headerlink" title="DES(Data Encryption Standard)"></a>DES(Data Encryption Standard)</h4><ul><li>56 비트의 키를 사용하는 암호기법</li><li>암호를 깨는 여러 방법들이 나오면서 사용하지 않는 것을 권장</li><li>과거 소프트웨어와의 호환성 유지를 위해 일부 사용(트리플 DES)</li></ul><h4 id="AES-Advanced-Encryption-Standard"><a href="#AES-Advanced-Encryption-Standard" class="headerlink" title="AES(Advanced Encryption Standard)"></a>AES(Advanced Encryption Standard)</h4><ul><li>DES를 대신하는 표준 대칭 암호 알고리즘(사이즈, 알고리즘 복잡도 ↑)</li><li>128 비트 평문을 128 비트 암호문으로 만드는 알고리즘(DES, 64 -&gt; 64)</li><li>속도가 빠르고 다양한 플랫폼에서 동작</li><li>현재까지는 안전, 사용을 권장</li></ul><hr><h2 id="현대-비대칭키-암호"><a href="#현대-비대칭키-암호" class="headerlink" title="현대 비대칭키 암호"></a>현대 비대칭키 암호</h2><h4 id="키-배송-문제-Key-distribution-problem"><a href="#키-배송-문제-Key-distribution-problem" class="headerlink" title="키 배송 문제(Key distribution problem)"></a>키 배송 문제(Key distribution problem)</h4><ul><li>대칭 암호를 사용하는 경우 송신자와 수신자가 사전에 대칭키를 공유하면서 발생하는 문제<h4 id="비대칭키-암호의-특징"><a href="#비대칭키-암호의-특징" class="headerlink" title="비대칭키 암호의 특징"></a>비대칭키 암호의 특징</h4></li><li>암호화 키(공개키)와 복호화 키(개인키)가 다름</li><li>암호화 키를 가지고 있는 누구든지 암호화 가능(암호화 키는 알려져도 무방)</li><li>복호화는 복호화 키를 소유해야만 가능</li><li>대칭키 알고리즘에 비하여 속도가 느림(수 백배)</li></ul><h4 id="RSA-Rivest-Shamir-Adleman"><a href="#RSA-Rivest-Shamir-Adleman" class="headerlink" title="RSA(Rivest-Shamir-Adleman)"></a>RSA(Rivest-Shamir-Adleman)</h4><ul><li>RSA 암호체계의 안정성<ul><li>큰 숫자를 소인수 분해하는 것이 어렵다는 것에 기반을 둔 기법</li><li>양자 컴퓨터의 실용화가 진행되면 안정성이 깨질것으로 예상됨</li></ul></li></ul><blockquote><p><em>이름 순서는 어떻게 정했을까?</em></p></blockquote><h4 id="ECDSA-Elliptic-Curve-Digital-Signature-Algorithm"><a href="#ECDSA-Elliptic-Curve-Digital-Signature-Algorithm" class="headerlink" title="ECDSA(Elliptic Curve Digital Signature Algorithm)"></a>ECDSA(Elliptic Curve Digital Signature Algorithm)</h4><ul><li>타원곡선을 이용한 전자서명 알고리즘</li></ul><hr><h2 id="공개키와-신원"><a href="#공개키와-신원" class="headerlink" title="공개키와 신원"></a>공개키와 신원</h2><ul><li>공개키를 이용한 메시지 복호화의 의미<ul><li>공개키에 대응하는 개인키를 소유한 사람이 작성한 메시지임을 확인</li></ul></li><li>블록체인에서의 익명적 신원(Anonumous Identity)<ul><li>공개키를 기반으로 익명적 신원을 사용</li></ul></li><li>탈중앙 신원(Decentralized Identity)<ul><li>중앙화된 신원 발급이 아니라 누구나 공개키-개인키 쌍을 생성하여 새로운 신원을 자유롭게 생성할 수 있음</li></ul></li></ul><hr><h2 id="암호학적-해시와-블록체인"><a href="#암호학적-해시와-블록체인" class="headerlink" title="암호학적 해시와 블록체인"></a>암호학적 해시와 블록체인</h2><h4 id="해시함수"><a href="#해시함수" class="headerlink" title="해시함수"></a>해시함수</h4><ul><li>입력 : 임의의 데이터</li><li>출력 : 고정자리 수의 데이터</li></ul><blockquote><p>[ex]<br>H(x) = x mod 10(34,098 -&gt; 8)<br>문제점 : 충돌 확률 10%</p></blockquote><h4 id="데이터-무결성-Integrity-검사"><a href="#데이터-무결성-Integrity-검사" class="headerlink" title="데이터 무결성(Integrity) 검사"></a>데이터 무결성(Integrity) 검사</h4><ul><li>암호학적 해시함수<ul><li>몇 가지 성질을 만족한다면 해시함수의 출력값은 원본 데이터의 다이제스트(digest) 또는 지문(fingerprint) 역할 가능</li></ul></li><li>데이터의 위변조 검사<ul><li>해시함수를 이용한 메시지 다이제스트 생성 및 기억</li><li>메시지의 다이제스트를 계산하여 원본의 다이제스트와 비교</li><li>메시지 전체를 비교하는 것에 비해 효과적</li></ul></li></ul><h4 id="암호학적-해시함수의-성질"><a href="#암호학적-해시함수의-성질" class="headerlink" title="암호학적 해시함수의 성질"></a>암호학적 해시함수의 성질</h4><ul><li>역상 저항성(preimage resistance, one way)<ul><li>Given y, infeasible to find x such that h(x) = y</li><li>주어진 해시값으로부터 원본 메시지를 찾아낼 수 없음</li></ul></li><li>제 2 역상 저항성(second preimage resistance)<ul><li>Given x, infeasible to find y ≠ x such that h(x) = h(y)</li><li>주어진 메시지와 해시값이 같은 또 다른 메시지를 찾을 수 없음</li></ul></li><li>충돌 저항성(collision resistance)<ul><li>Infeasible to find y, x, with y ≠ x such that h(x) = h(y)</li><li><strong>자유롭게</strong> 탐색하여 해시값이 같은 2개의 메시지를 찾을 수 없음</li><li>제 2 역상 저항성을 깨는 것이 더 어려움(지정된 target)</li></ul></li></ul><h4 id="충돌저항성"><a href="#충돌저항성" class="headerlink" title="충돌저항성"></a>충돌저항성</h4><ul><li><p>Pigeonhole Principle</p><ul><li>비둘기의 수보다 비둘기 집의 개수가 적은 경우</li><li>256 비트의 출력값을 가지는 해시함수 <strong>2^256 + 1 가지의 입력값을 검사하면 반드시 충돌을 찾을 수 있음</strong></li></ul></li><li><p>Birthday paradox</p><ul><li>23명 이상이 모이면 생일이 같을 확률은 1/2을 넘음, 366명이 모이면 반드시 존재</li><li>57명이 모이면 확률은 99%를 넘음</li></ul></li><li><p>SHA-256 해시함수(256 비트의 출력값)</p><ul><li>10억 가지의 입력값에 대해서 사용할 경우 충돌이 발생할 확률은 4.3*10^-60</li></ul></li></ul><h4 id="MD4-Message-Digest-4"><a href="#MD4-Message-Digest-4" class="headerlink" title="MD4(Message Digest 4)"></a>MD4(Message Digest 4)</h4><h4 id="MD5"><a href="#MD5" class="headerlink" title="MD5"></a>MD5</h4><h4 id="SHA-Secure-Hash-Algorithm"><a href="#SHA-Secure-Hash-Algorithm" class="headerlink" title="SHA(Secure Hash Algorithm)"></a>SHA(Secure Hash Algorithm)</h4><ul><li>SHA1</li><li>SHA-256</li><li>SHA-384</li><li>SHA-512<h4 id="블록의-무결성-보존을-위한-해시함수"><a href="#블록의-무결성-보존을-위한-해시함수" class="headerlink" title="블록의 무결성 보존을 위한 해시함수"></a>블록의 무결성 보존을 위한 해시함수</h4>새로운 블록을 생성할 때 이전 블록의 해시값을 포함<h4 id="Merkle-Tree-Ralph-Merkle"><a href="#Merkle-Tree-Ralph-Merkle" class="headerlink" title="Merkle Tree(Ralph Merkle)"></a>Merkle Tree(Ralph Merkle)</h4></li><li>데이터 블록의 해시값을 트리 구조로 구성</li><li>부모 노드는 자식 노드의 해시값을 저장</li><li>트리의 일부 정보만으로 “proof of membership”을 log(n) 시간 안에 확인 가능</li></ul><hr><h2 id="해시퍼즐과-Proof-of-Work"><a href="#해시퍼즐과-Proof-of-Work" class="headerlink" title="해시퍼즐과 Proof of Work"></a>해시퍼즐과 Proof of Work</h2><h4 id="Proof-of-Work"><a href="#Proof-of-Work" class="headerlink" title="Proof of Work"></a>Proof of Work</h4><ul><li>PoW 합의 : 채굴과 비트코인 발행을 위한 약속<ul><li>해시퍼즐을 푼 채굴자는 비트코인 획득</li><li>신규 블록의 생성 권한도 획득</li></ul></li><li>해시퍼즐 : 주어진 조건을 충족하는 nonce 변수값 찾기<ul><li>가능한 nonce 값에 대해 일일이 해시 출력값을 계산해봐야 함</li></ul></li><li>해시값이 미리 정해진 T보다 작을 때까지 nonce를 탐색</li></ul><h4 id="해시퍼즐의-특징"><a href="#해시퍼즐의-특징" class="headerlink" title="해시퍼즐의 특징"></a>해시퍼즐의 특징</h4><ul><li>무작위성(randomness)</li><li>난이도<ul><li>모든 컴퓨터들이 시도하여 최초로 답을 찾는데 평균 10분 소요</li><li>2주에 한 번씩 난이도 조정(T 값을 조정)</li></ul></li></ul><hr><h2 id="전자서명과-블록체인"><a href="#전자서명과-블록체인" class="headerlink" title="전자서명과 블록체인"></a>전자서명과 블록체인</h2><h4 id="해시함수의-장점과-한계"><a href="#해시함수의-장점과-한계" class="headerlink" title="해시함수의 장점과 한계"></a>해시함수의 장점과 한계</h4><ul><li>장점 : 데이터 내용의 무결성에 대한 확인 가능<ul><li>해시함수를 사용하여 내용의 진위 확인 가능</li></ul></li><li>한계 : 데이터 출처 확인(인증, authentication) 불가능<ul><li>메시지 송신자의 진위 여부 확인 불가능</li><li>해결책 : 메시지 인증 코드, 디지털 서명<h4 id="메시지-인증-코드-MAC-Message-Authentication-Code"><a href="#메시지-인증-코드-MAC-Message-Authentication-Code" class="headerlink" title="메시지 인증 코드 MAC(Message Authentication Code)"></a>메시지 인증 코드 MAC(Message Authentication Code)</h4></li></ul></li><li>해시는 키를 사용하지 않으나, MAC는 대칭키를 사용</li><li>대칭키 기법과 유사</li><li>구현<ul><li>해시함수를 이용한 구현</li><li>트리플 DES나 AES와 같은 블록 암호를 사용해서 메시지 인증 코드를 구현</li></ul></li><li>활용 분야<ul><li>SWIFT(Society for Worldwide Internet Financial Telecommunication)</li><li>IPsec(Internet Protocol Security)</li><li>SSL/TLS</li></ul></li><li>문제점<ul><li>부인 방지(non-repudiation) 불가<ul><li>수신자는 송신자가 메시지를 보냈음을 확인할 수 있음</li><li>그러나 이 사실을 제 3자에게 증멍할 수 없으며, 특히 송신자가 부인할 경우 이를 제 3자에게 입증할 수 없음</li><li>수신자도 동일한 키를 가지고 있으므로 <strong>수신자가 메시지를 만들었을 가능성</strong>이 있기 때문<h4 id="전자-서명-Digital-Signature"><a href="#전자-서명-Digital-Signature" class="headerlink" title="전자 서명(Digital Signature)"></a>전자 서명(Digital Signature)</h4></li></ul></li></ul></li><li>송신자는 자신만이 알고있는 개인키를 사용하여 서명을 작성</li><li>수신자는 공개키를 사용하여 서명을 검증</li><li>송신자만이 해당 개인키를 가지고 있으므로 전자 서녕을 한 당사자임이 증명됨(제 3자에게도 증명)</li><li>방법<ul><li>메시지에 직접 서명</li><li>메시지의 해시에 서명</li></ul></li></ul>]]></content:encoded>
      
      <comments>http://everydayspring.github.io/2021/04/16/Blockchain-2021-04-16-0/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Hyperledger (작성중)</title>
      <link>http://everydayspring.github.io/2021/03/31/Blockchain-Hyperledger-2021-03-31-1/</link>
      <guid>http://everydayspring.github.io/2021/03/31/Blockchain-Hyperledger-2021-03-31-1/</guid>
      <pubDate>Wed, 31 Mar 2021 08:24:00 GMT</pubDate>
      <description>
      
        Hyperledger란?
스마트 컨트랙트(smart contract)을 구현할 수 있는 오픈소스 기반의 프라이빗 블록체인 프로젝트
암호화폐보다는 데이터베이스 관점에서 접근
공유 데이터베이스의 새로운 형태 로써 기업형 비즈니스 환경에서 사용할 수 있도록 블록체인 솔루션을 발전시킨 것

 * 2015년, Linux Foundation
 * IBM, Inter, SAP 등 약 230개의 기업에서 사용
 * 기업 친화적 license (Apache 2.0 license)
 * 모듈화된 디자인, 상호운용성, 보안, API제공

Distrib
      
      </description>
      
      
      <content:encoded><![CDATA[<hr><h2 id="Hyperledger란"><a href="#Hyperledger란" class="headerlink" title="Hyperledger란?"></a>Hyperledger란?</h2><p>스마트 컨트랙트(smart contract)을 구현할 수 있는 오픈소스 기반의 프라이빗 블록체인 프로젝트<br>암호화폐보다는 데이터베이스 관점에서 접근<br><strong>공유 데이터베이스의 새로운 형태</strong> 로써 기업형 비즈니스 환경에서 사용할 수 있도록 블록체인 솔루션을 발전시킨 것</p><ul><li>2015년, Linux Foundation</li><li>IBM, Inter, SAP 등 약 230개의 기업에서 사용</li><li>기업 친화적 license (Apache 2.0 license)</li><li>모듈화된 디자인, 상호운용성, 보안, API제공</li></ul><h2 id="Distributed-and-Shared-Database"><a href="#Distributed-and-Shared-Database" class="headerlink" title="Distributed and Shared Database"></a>Distributed and Shared Database</h2><p>공유 데이터베이스에서 고려할 사항</p><ul><li>신뢰 : 데이터에 접근할 수 있는 사용자에 대한 신뢰</li><li>충돌 해결 : 동일한 데이터를 수정하는 충돌에 대한 해결</li><li>권한 및 접근 관리 : 접근할 수 있는 사용자와 권한</li></ul><h2 id="Public-Blockchain"><a href="#Public-Blockchain" class="headerlink" title="Public Blockchain"></a>Public Blockchain</h2><p><em>기업형 블록체인에 적합하지 않은 기존의 Public Blockchain</em></p><ul><li>보안 (Confidentiality and privacy)<ul><li>공개된 블록체인, 공개된 데이터</li></ul></li><li>확장성(Scalability)<ul><li>참여하는 모든 노드가 트랜잭션을 처리</li></ul></li><li>지속 불가능한 합의 알고리즘(Unsustainable consensus algorithm)<ul><li>PoW 알고리즘이 불필요하게 연산 리소스를 낭비함</li></ul></li><li>거버넌스 부족(Lack of governance)<ul><li>완전한 탈중앙화 시스템</li></ul></li></ul><h2 id="Private-Blockchain"><a href="#Private-Blockchain" class="headerlink" title="Private Blockchain"></a>Private Blockchain</h2><ul><li>Trust building<ul><li>서로 다른 기업들 간의 비즈니스에서의 신뢰 구축 가능</li></ul></li><li>Transparency, Security, Privacy<ul><li>투명성, 보안, 프라이버시</li></ul></li><li>Programmable business logic<ul><li>스마트 컨트랙트 실행 가능, 소프트웨어적 자동화<ul><li>ex. 과거에는 생각하지 못했던 기능을 전자적으로 구현</li></ul></li></ul></li><li>Traceability<ul><li>모든 기록을 무결성을 가지면서 추적 가능</li></ul></li><li>Tradability<ul><li>자산들의 거래를 가능하게 함</li></ul></li></ul><h2 id="Hyperledger-구성"><a href="#Hyperledger-구성" class="headerlink" title="Hyperledger 구성"></a>Hyperledger 구성</h2><p><em>프레임워크와 도구</em></p><ul><li>Frameworks : PABRIC, INDY 등…</li><li>Tools : CALIPER, CELLO 등…</li></ul><hr><h2 id="Hyperledger-Fabric"><a href="#Hyperledger-Fabric" class="headerlink" title="Hyperledger Fabric"></a>Hyperledger Fabric</h2><ul><li>linux foundation open source project</li></ul><h3 id="Peer"><a href="#Peer" class="headerlink" title="Peer"></a>Peer</h3><p><em>블록체인의 노드와 비슷한 개념</em></p><ul><li>ledger와 chaincode(smart contract)를 실행하는 참여자</li><li>관리자나 응용프로그램이 액세스할 수 있도록 API제공</li><li>peer의 물리적 위치는 제한이 없음(cloud, data center, local machine)</li><li>peer는 개념적으로 특정 채널에 속해있음</li></ul><h4 id="Orderer-peer"><a href="#Orderer-peer" class="headerlink" title="Orderer peer"></a>Orderer peer</h4><ul><li>consensus 담당 peer </li></ul><p>채널내에서 여러개의 트랜잭션이 발생할 때 모든 peer들의 ledger가 동일하게 유지되도록 하는 역할<br>주로 쓰기작업에서 요청들의 순서를 결정한 후 각 peer들에게 전달</p><h3 id="Application"><a href="#Application" class="headerlink" title="Application"></a>Application</h3><ul><li>응용프로그램은 peer에 API형태로 접근, ledger에 접근하거나 chaincode를 실행</li><li>블록체인 외부에 존재 (Peer, ledger 및 chaincode는 블록체인 내부)</li><li>Ledger query : read 기능<ul><li>peer와 연결</li><li>Ledger의 정보를 요청하는 chaincode 호출</li><li>peer는 chaincode를 통해서 응용프로그램이 원하는 결과 반환</li></ul></li><li>Ledger update : write 기능<ul><li>orderer peer에게 요청</li><li>orderer는 consensus작업 수행 후 쓰기 작업 결과 반환</li></ul></li></ul><h3 id="Channel"><a href="#Channel" class="headerlink" title="Channel"></a>Channel</h3><p><em>블록체인 네트워크 하부에 존재하는 일종의 sub 네트워크</em></p><p>각 채널마다 별도의 Ledger운영 가능 -&gt; <strong>기업내의 업무별 블록체인 분리</strong> (ex. 영업용, 개발용)</p><h3 id="Ledger"><a href="#Ledger" class="headerlink" title="Ledger"></a>Ledger</h3><p>Fact와 State를 기록하는 원장</p><ul><li>Fact : 블록체인에서 발생한 트랜잭션 정보</li><li>State : 트랜잭션을 통해서 변경된 블록체인 정보 (key, value로 구성되는 데이터베이스 사용)</li></ul><blockquote><p>블록체인의 트랜잭션 정보가 데이터베이스의 상태를 결정<br>이론적으로 데이터베이스가 없어도 블록체인으로부터 복원 가능</p></blockquote><h4 id="Operation"><a href="#Operation" class="headerlink" title="Operation"></a>Operation</h4><ul><li>Query (read)</li><li>Update (create, update, delete) : Orderer를 거쳐서 수행</li></ul><h4 id="Ledger-Blockchain-World-State"><a href="#Ledger-Blockchain-World-State" class="headerlink" title="Ledger: Blockchain + World State"></a>Ledger: Blockchain + World State</h4><ul><li>Blockchain (facts) : 트랜잭션들의 대한 로그, 변경 불가능</li><li>World state (states) : key-value 쌍 데이터베이스, 상태에 따라 변경됨</li></ul><h4 id="World-State"><a href="#World-State" class="headerlink" title="World State"></a>World State</h4><p>Key-Value를 저장하는 DB형태 </p><p>동일한 key에 대해서 동시에 쓰기작업이 발생할 때 쓰기 시점의 version 확인이 필요함 (concurrent update 방지)</p><p>version : 각 key-value별 버전 유지, value가 업데이트 될 때마다 증가 (일종의 counter)</p><p>MVCC기법 : 다중 트랜잭션의 상호간섭 작용으로부터 Database를 보호</p><ul><li>LevelDB : simple key-value pairs</li><li>couchDB : LevelDB보다 기능이 풍부하고 Json데이터 지원</li></ul>]]></content:encoded>
      
      <comments>http://everydayspring.github.io/2021/03/31/Blockchain-Hyperledger-2021-03-31-1/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Blockchain 시작하기</title>
      <link>http://everydayspring.github.io/2021/03/29/Blockchain-2021-03-29-1/</link>
      <guid>http://everydayspring.github.io/2021/03/29/Blockchain-2021-03-29-1/</guid>
      <pubDate>Mon, 29 Mar 2021 02:23:18 GMT</pubDate>
      <description>
      
        Blockchain History
 * Bitcoin (암호화폐 + 지불시스템) : 블록체인 기술을 기반으로 만들어진 온라인 암호화폐, 최초의 블록체인
 * Ethereum (암호화폐 + 지불시스템 + 스마트컨트랙트)
 * Hyperledger (데이터베이스 + 스마트컨트랙트) : 암호화폐의 개념을 빼고 데이터베이스 컨셉을 차용, 주로 기업용 솔루션 제공이 목적

암호화폐(Cryptocurrency) : 분산장부 (Distributed Ledger)에서 공개키 암호화를 통해 안전하게 전송하고, 해시 함수를 이용해 쉽게 소유권을 증명
      
      </description>
      
      
      <content:encoded><![CDATA[<h3 id="Blockchain-History"><a href="#Blockchain-History" class="headerlink" title="Blockchain History"></a>Blockchain History</h3><ul><li>Bitcoin (암호화폐 + 지불시스템) : 블록체인 기술을 기반으로 만들어진 온라인 암호화폐, 최초의 블록체인</li><li>Ethereum (암호화폐 + 지불시스템 + 스마트컨트랙트)</li><li>Hyperledger (데이터베이스 + 스마트컨트랙트) : 암호화폐의 개념을 빼고 데이터베이스 컨셉을 차용, 주로 기업용 솔루션 제공이 목적</li></ul><blockquote><p>암호화폐(Cryptocurrency) : <strong>분산장부 (Distributed Ledger)</strong>에서 <strong>공개키 암호화</strong>를 통해 안전하게 전송하고, <strong>해시 함수</strong>를 이용해 쉽게 소유권을 증명해낼 수 있는 <strong>디지털 자산</strong></p><p>스마트컨트랙트(Smart Contract) : 블록체인 기반으로 금융거래, 부동산 계약, 공증 등 다양한 형태의 계약을 체결하고 이행하는 것</p><p><em>[출처] wikipedia.org</em></p></blockquote><h3 id="Bitcoin-구성요소"><a href="#Bitcoin-구성요소" class="headerlink" title="Bitcoin 구성요소"></a>Bitcoin 구성요소</h3><ul><li>트랜잭션(Transection) : Bitoin을 지불하는 기록 <em>ex. A가 B에게 50BTC를 지불한다</em></li><li>블록(Block) : 트랜잭션들의 집합 (제네시스 블록(Genesis Block) : 최초의 블록)</li><li>블록체인(Blockchain) : 블록들의 집합 (개념적으로 체인형태로 연결)</li></ul><h3 id="Bitcoin-동작요소"><a href="#Bitcoin-동작요소" class="headerlink" title="Bitcoin 동작요소"></a>Bitcoin 동작요소</h3><ul><li>지불(Payment by end users)<ul><li>Transection 생성, Broadcast</li></ul></li><li>채굴(Mining by Miners)<ul><li>Hash 퍼즐을 해결한 최초의 채굴자가 Bitcoin 보상 획득</li></ul></li><li>합의(Consensus by miners and/or users)<ul><li>노드들의 합의를 통해서 트랜잭션이 블록체인에 기록됨</li></ul></li></ul><h2 id="Blockchain-기술적-특징"><a href="#Blockchain-기술적-특징" class="headerlink" title="Blockchain 기술적 특징"></a>Blockchain 기술적 특징</h2><hr><p><em>합의(Consensus)에 의한 데이터 입력<br>복제(Replication)에 의한 데이터 공유<br>추가 전용 로그(Append-only log)<br>원자성(Atomicity)과 선형성(Linearizability)</em></p><h3 id="분산공유-Readable-by-all-and-writable-by-all"><a href="#분산공유-Readable-by-all-and-writable-by-all" class="headerlink" title="분산공유 Readable by all and writable by all"></a>분산공유 <em>Readable by all and writable by all</em></h3><p>모든 참여자가 읽고, 복사하고, 저장하고, 생성할 권리를 가짐 (read / write)</p><p>단, Permissioned Blockchain의 경우 허가된 사용자만 가능</p><h3 id="탈중앙성-No-centralized-trust-and-governance"><a href="#탈중앙성-No-centralized-trust-and-governance" class="headerlink" title="탈중앙성 No centralized trust and governance"></a>탈중앙성 <em>No centralized trust and governance</em></h3><p>중앙화된 서버, 기관의 신뢰가 필요하지 않음</p><p>참여자들간의 검증 및 집단 합의로 신뢰 형성</p><h3 id="무결성-Forgery-and-tamper-proof"><a href="#무결성-Forgery-and-tamper-proof" class="headerlink" title="무결성 Forgery- and tamper-proof"></a>무결성 <em>Forgery- and tamper-proof</em></h3><p>위조 방지를 위한 <strong>전자서명</strong></p><p>변조 방지를 위한 <strong>해쉬 함수</strong></p><p><em>한양대학교 블록체인 강의를 수강하면서 정리한 게시물입니다.</em></p>]]></content:encoded>
      
      <comments>http://everydayspring.github.io/2021/03/29/Blockchain-2021-03-29-1/#disqus_thread</comments>
    </item>
    
    <item>
      <title>집떠나와 연구실 출근</title>
      <link>http://everydayspring.github.io/2021/02/22/etc-2021-02-22-01/</link>
      <guid>http://everydayspring.github.io/2021/02/22/etc-2021-02-22-01/</guid>
      <pubDate>Mon, 22 Feb 2021 06:14:55 GMT</pubDate>
      <description>
      
        어제는 집을 나왔다

자취생활을 접고 본가에 들어간지 정확히 1년만에 집에서 나왔다
들어갈땐 정말 싫었는데 정신없이 1년을 보냈더니 나올때는 너무 아쉬웠다
그래서 차도 미루고 미루다 깜깜해지고 나서야 짐을 챙겨 나왔다

결국 숙소는 3월까지 따로 잡고 4월에 계약한 집으로 이사가는 걸로….
기차타고 출퇴근할 엄두가 안나서 그냥 가까운 곳으로 자리를 잡아버렸다
다소 급하게 잡았는데 막상 와보니 엘리베이터가 없는곳이라 너무 불편했다
3층까지 캐리어를 이고지고 올라가느라 땀을 뻘뻘 흘리고
마트가 곧 문닫을 시간이어서 급하게 달려가서 필요
      
      </description>
      
      
      <content:encoded><![CDATA[<p>어제는 집을 나왔다</p><p>자취생활을 접고 본가에 들어간지 정확히 1년만에 집에서 나왔다<br>들어갈땐 정말 싫었는데 정신없이 1년을 보냈더니 나올때는 너무 아쉬웠다<br>그래서 차도 미루고 미루다 깜깜해지고 나서야 짐을 챙겨 나왔다</p><p>결국 숙소는 3월까지 따로 잡고 4월에 계약한 집으로 이사가는 걸로….<br>기차타고 출퇴근할 엄두가 안나서 그냥 가까운 곳으로 자리를 잡아버렸다<br>다소 급하게 잡았는데 막상 와보니 엘리베이터가 없는곳이라 너무 불편했다<br>3층까지 캐리어를 이고지고 올라가느라 땀을 뻘뻘 흘리고<br>마트가 곧 문닫을 시간이어서 급하게 달려가서 필요한것들도 사고 오자마자 바빴다<br>1년만에 다시 집을 나왔더니 기분이 싱숭생숭해서 잠도 잘 안오고 밤을 새다시피 했다</p><p>비몽사몽 출근하고 연구실 사람들을 만나고 점심을 같이 먹었다<br>으레 연구실이 다 그렇듯 점심이 되서 뭘먹지 하는 소리가 나왔다 새삼 다시 연구실이라는데를 왔구나 실감이 났다 ㅋㅋㅋ<br>언급된 메뉴가 돈까스, 제육 순으로 한치에 오차도 없이 한국인의 소울푸드가 나와서 너무 웃겼다<br>밤을 새서 정신도 없고 그 상황이 웃겨서 밥먹으면서 웃음을 참았더니 뭐가 그렇게 웃기냐고 물어봤다<br>웃으면 안되는건가… 큰일났다 나 웃음 많은데….</p><p>오전에는 계속 듣던 강의를 듣고 (이번에 또 새로운 교수님이 강의 해주시는데 재밌었다)<br>오후에는 조교 면접, 다행히 농협에서 보조강사 했던 경험이 있어서 할 말이 있었다<br>만약 하게되면 비전공자를 대상으로 하는 파이썬 조교에 들어갈텐데 오랜만이라 조금 신나기도 한다</p><p>지난번에 조교 필기테스트 보러왔을 때만 해도 출입카드가 없어서 도둑도 아니고 ㅜ 누가 열 때까지 기다렸다가 들어갔는데<br>오늘은 임시지만 출입증을 받았다… 이제 도둑같이 안다녀도 된다….<br>일하느라 못들었던 강의도 챙겨들어야하고, 오늘 왔더니 앞으로 과제는 블록체인쪽일 것 같고,<br>개발 얘기를 하면서 GO랑… node.js 얘기도 나왔다… 세상에 얼마만에 듣는….<br>당분간 공부를 열심히 해야할 것 같다 지금…. 블로그나 쓸때가 아닌가….</p>]]></content:encoded>
      
      <comments>http://everydayspring.github.io/2021/02/22/etc-2021-02-22-01/#disqus_thread</comments>
    </item>
    
    <item>
      <title>대학원 첫걸음</title>
      <link>http://everydayspring.github.io/2021/01/29/etc-2021-01-29-01/</link>
      <guid>http://everydayspring.github.io/2021/01/29/etc-2021-01-29-01/</guid>
      <pubDate>Fri, 29 Jan 2021 00:41:24 GMT</pubDate>
      <description>
      
        대학원 진학
대학원에 진학하게 되었다. 

19년 말 직장을 관두면서 재취업 혹은 대학원 진학을 희망하고 있었는데

어쩌다보니 일을 반년이나 하게되었다.

일을 하면서 어영부영 지원한 20년도 2학기 신입학은 낙방

21년도 1학기는 합격해 올해는 다시 캠퍼스 생활을 하게 되었다.

대학원 입시
일을 하면서 준비하느라 충분히 준비했다고는 못하겠다.

(일을 하고 있다는 핑계를 대면서 떨어지면 놀이동산 기숙알바를 지원하려고 했으니 말다했지뭐)

3~4군데 정도 지원했고, 2군데 학교에서 1차 합격 연락을 받았고 면접을 보게 되었다.

      
      </description>
      
      
      <content:encoded><![CDATA[<h1 id="대학원-진학"><a href="#대학원-진학" class="headerlink" title="대학원 진학"></a>대학원 진학</h1><p>대학원에 진학하게 되었다. </p><p>19년 말 직장을 관두면서 재취업 혹은 대학원 진학을 희망하고 있었는데</p><p>어쩌다보니 일을 반년이나 하게되었다.</p><p>일을 하면서 어영부영 지원한 20년도 2학기 신입학은 낙방</p><p>21년도 1학기는 합격해 올해는 다시 캠퍼스 생활을 하게 되었다.</p><h2 id="대학원-입시"><a href="#대학원-입시" class="headerlink" title="대학원 입시"></a>대학원 입시</h2><p>일을 하면서 준비하느라 충분히 준비했다고는 못하겠다.</p><p>(일을 하고 있다는 핑계를 대면서 떨어지면 놀이동산 기숙알바를 지원하려고 했으니 말다했지뭐)</p><p>3~4군데 정도 지원했고, 2군데 학교에서 1차 합격 연락을 받았고 면접을 보게 되었다.</p><p>서울 소재 대학은 대면 면접, 울산 소재 대학은 비대면 면접으로 이뤄졌다.</p><p>면접기간에 한창 바빴다 왕복 2시간을 매일 할애하며 인천-서울 출퇴근을 했고</p><p>다소 갑작스럽게 맡게된 편집일(240시간 분량, 다시 생각해도 미쳤었다)과</p><p>강의 제작일이 겹쳐(강의 준비부터 촬영, 편집까지 모두 혼자 했다)</p><p>야근은 기본, 밤샘도 여러차례, 어떤 날에는 다리가 퉁퉁부어 쪼그려 앉지도 못했다.</p><p>뭐 구구절절 얘기 했지만 그래봤자 핑계이고 결론은 면접 대비가 엉망이었다는것..ㅎ</p><h2 id="면접"><a href="#면접" class="headerlink" title="면접"></a>면접</h2><p>서울 소재 대학은 지난 학기에도 지원했던 곳이라 동일한 장소에서 면접을 진행했다.</p><p>답변도 반정도 밖에 하지 못해서 사실 또 한번 떨어지겠구나 하는 생각을 했다.</p><p>두번째 비대면 면접도 밤을 새고 비몽사몽한 상태로 진행했는데,</p><p>시작하자마자 영어 면접이라는 말에 준비 안했다고 떼를 썼다. (멍청한건지 용감한건지)</p><p>결국 한국어로 면접을 진행했고 영어면접에 ‘준비안했는데 어쩌라고요^^’를 시전한 스스로가 어이가 없었다.</p><p>결과는 두군데 모두 합격 wow</p><h2 id="입학-준비"><a href="#입학-준비" class="headerlink" title="입학 준비"></a>입학 준비</h2><p>이 글은 요새 엄청난 감정기복을 기록하기 위한 글이다.</p><p>솔직히 요새 너무 힘들다. 하하.</p><p>많은 일이 겹쳐 예민해진 상태에서 겪는 이런 저런 일들에 감정이 이리저리 난리도 아니다.</p><p>차분히 기록을 하면서 기분이 태도가 되지 않기를 다짐하고,</p><p>나중에 가서는 이럴때도 있었구나 하는 기록이 되겠지 싶어서..</p><hr><p>뭐 대학원에 합격하고는 당연히 기분이 좋았다.</p><p>두군데에 합격해 어느 곳에 갈지 결정하느라 며칠을 머리를 싸매고 고민했다.</p><p>다음은 집구하기, 대출을 끼고 전세로 들어갈 만한 집을 찾는데 처음 본 한군데가 적절하고 마음에 들었다.</p><p>하지만 다음날 바로 다른 사람이 계약을 해버렸다.</p><p>결국은 세군데 정도 더 보고 처음 마음에 들었던 건물에 다른 층에 들어가기로 했다.</p><p>묶여있는 돈이 있어서 반전세 -&gt; 전세로 전환하기로 하였으나 임대인이 거절해서 입주가 많이 밀렸다.</p><p>계약을 위해 대출을 알아보는데 원래 하기로 했던 카카오 대출에서 불가 판정을 받아서 또 골치 아팠고,</p><p>다행히 다른 은행에서 대출이 가능하다고 해서 계약을 진행했다.</p><p>그렇지만 여전히 입주는 4월이라 2,3월은 뭐 기차나 실컷 타게 생겼다.</p><p>그리고는 또 갑자기 등록금에 문제가 생겨 당장 2일뒤인 등록금대출이 필요했고,</p><p>다행히 대학원 등록금은 처리가 빨라 금방 해결되었다.</p><hr><p>또 막상 이렇게 적고 보니 지금 당장 읽어봐도 별일 아닌것 같아 보이네.. 머쓱..</p><p>그렇지만 요새 정말 여러 상황이 겹쳐 감정이 오락가락 난리도 아니다.</p><p>이번달에는 일단 2개 강의 운영과 3개의 사전강의 수강이 있고….</p><p>3째주부터는 또 KTX를 타고 출퇴근을 하게 생겼다.e</p><p>음 어떻게든 되겠지!</p><p>‘자기비하 절대금지’라는 말을 새기면서 열심히 그리고 행복하게만 살자.</p><p>나자신 화이팅 허허.</p>]]></content:encoded>
      
      <comments>http://everydayspring.github.io/2021/01/29/etc-2021-01-29-01/#disqus_thread</comments>
    </item>
    
    <item>
      <title>데이터 분석 프로젝트 &#39;한국인의 삶을 파악하라&#39;</title>
      <link>http://everydayspring.github.io/2020/08/18/R-2020-08-18-CHAPTER09/</link>
      <guid>http://everydayspring.github.io/2020/08/18/R-2020-08-18-CHAPTER09/</guid>
      <pubDate>Tue, 18 Aug 2020 12:59:06 GMT</pubDate>
      <description>
      
        ‘한국복지패널데이터’ 분석 준비하기
데이터 분석 준비하기
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36


# 데이터 준비하기
# [한국복지패널데이터 다운로드](bit.ly/doit_rb)

# 패키지 설치 및 로드하기
install.packages(&quot;foreign&quot;)   # foreign 패키지 설치

library(foreign)              # SPSS 파일 불러오기
library(dpl
      
      </description>
      
      
      <content:encoded><![CDATA[<h2 id="‘한국복지패널데이터’-분석-준비하기"><a href="#‘한국복지패널데이터’-분석-준비하기" class="headerlink" title="‘한국복지패널데이터’ 분석 준비하기"></a>‘한국복지패널데이터’ 분석 준비하기</h2><h3 id="데이터-분석-준비하기"><a href="#데이터-분석-준비하기" class="headerlink" title="데이터 분석 준비하기"></a>데이터 분석 준비하기</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 데이터 준비하기</span></span><br><span class="line"><span class="comment"># [한국복지패널데이터 다운로드](bit.ly/doit_rb)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 패키지 설치 및 로드하기</span></span><br><span class="line">install.packages(<span class="string">"foreign"</span>)   <span class="comment"># foreign 패키지 설치</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">library</span>(foreign)              <span class="comment"># SPSS 파일 불러오기</span></span><br><span class="line"><span class="keyword">library</span>(dplyr)                <span class="comment"># 전처리</span></span><br><span class="line"><span class="keyword">library</span>(ggplot2)              <span class="comment"># 시각화</span></span><br><span class="line"><span class="keyword">library</span>(readxl)               <span class="comment"># 엑셀 파일 불러오기</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 데이터 불러오기</span></span><br><span class="line">getwd()</span><br><span class="line"></span><br><span class="line">raw_welfare &lt;- read.spss(file = <span class="string">"Koweps_hpc10_2015_beta1.sav"</span>,</span><br><span class="line">                         to.data.frame = <span class="literal">T</span>)</span><br><span class="line"></span><br><span class="line">welfare &lt;- raw_welfare</span><br><span class="line"></span><br><span class="line"><span class="comment"># 데이터 검토하기 </span></span><br><span class="line">head(welfare)</span><br><span class="line">tail(welfare)</span><br><span class="line">View(welfare)</span><br><span class="line">dim(welfare)</span><br><span class="line">str(welfare)</span><br><span class="line">summary(welfare)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 변수명 바꾸기</span></span><br><span class="line">welfare &lt;- rename(welfare,</span><br><span class="line">                  sex = h10_g3,             <span class="comment"># 성별</span></span><br><span class="line">                  birth = h10_g4,           <span class="comment"># 태어난 연도</span></span><br><span class="line">                  marriage = h10_g10,       <span class="comment"># 혼인 상태</span></span><br><span class="line">                  religion = h10_g11,       <span class="comment"># 종교</span></span><br><span class="line">                  income = p1002_8aq1,      <span class="comment"># 월급</span></span><br><span class="line">                  code_job = h10_eco9,      <span class="comment"># 직업 코드</span></span><br><span class="line">                  code_region = h10_reg7)   <span class="comment"># 지역 코드</span></span><br></pre></td></tr></table></figure><h3 id="데이터-분석-절차"><a href="#데이터-분석-절차" class="headerlink" title="데이터 분석 절차"></a>데이터 분석 절차</h3><ul><li>1단계. 변수 검토 및 전처리</li><li>2단계. 변수 간 관계 분석</li></ul><h2 id="성별에-따른-월급-차이"><a href="#성별에-따른-월급-차이" class="headerlink" title="성별에 따른 월급 차이"></a>성별에 따른 월급 차이</h2><h3 id="성별-변수-검토-및-전처리"><a href="#성별-변수-검토-및-전처리" class="headerlink" title="성별 변수 검토 및 전처리"></a>성별 변수 검토 및 전처리</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 변수 검토하기</span></span><br><span class="line">class(welfare$sex)</span><br><span class="line">table(welfare$sex)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 전처리</span></span><br><span class="line"><span class="string">' 이상치 확인 '</span></span><br><span class="line">table(welfare$sex)</span><br><span class="line"><span class="string">' 이상치 결측 처리 '</span></span><br><span class="line">welfare$sex &lt;- ifelse(welfare$sex == <span class="number">9</span>, <span class="literal">NA</span>, welfare$sex)</span><br><span class="line"><span class="string">' 결측치 확인 '</span></span><br><span class="line">table(is.na(welfare$sex))</span><br><span class="line"><span class="string">' 성별 항목 이름 부여 '</span></span><br><span class="line">welfare$sex &lt;- ifelse(welfare$sex == <span class="number">1</span>, <span class="string">"male"</span>, <span class="string">"female"</span>)</span><br><span class="line">table(welfare$sex)</span><br><span class="line">qplot(welfare$sex)</span><br></pre></td></tr></table></figure><h3 id="월급-변수-검토-및-전처리"><a href="#월급-변수-검토-및-전처리" class="headerlink" title="월급 변수 검토 및 전처리"></a>월급 변수 검토 및 전처리</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 변수 검토하기</span></span><br><span class="line">class(welfare$income)</span><br><span class="line">summary(welfare$income)</span><br><span class="line">qplot(welfare$income) + xlim(<span class="number">0</span>, <span class="number">1000</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 전처리</span></span><br><span class="line"><span class="string">' 이상치 확인 '</span></span><br><span class="line">summary(welfare$income)</span><br><span class="line"><span class="string">' 이상치 결측 처리 '</span></span><br><span class="line">welfare$income &lt;- ifelse(welfare$income %<span class="keyword">in</span>% c(<span class="number">0</span>, <span class="number">9999</span>), <span class="literal">NA</span>, welfare$income)</span><br><span class="line"><span class="string">' 결측치 확인 '</span></span><br><span class="line">table(is.na(welfare$income))</span><br></pre></td></tr></table></figure><h3 id="성별에-따른-월급-차이-분석하기"><a href="#성별에-따른-월급-차이-분석하기" class="headerlink" title="성별에 따른 월급 차이 분석하기"></a>성별에 따른 월급 차이 분석하기</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 성별 월급 평균표 만들기</span></span><br><span class="line">sex_income &lt;- welfare %&gt;% </span><br><span class="line">  filter(!is.na(income)) %&gt;% </span><br><span class="line">  group_by(sex) %&gt;% </span><br><span class="line">  summarise(mean_income = mean(income))</span><br><span class="line"></span><br><span class="line">sex_income</span><br><span class="line"><span class="comment"># 그래프 만들기</span></span><br><span class="line">ggplot(data = sex_income, aes(x = sex, y = mean_income)) + geom_col()</span><br></pre></td></tr></table></figure><h2 id="나이와-월급의-관계"><a href="#나이와-월급의-관계" class="headerlink" title="나이와 월급의 관계"></a>나이와 월급의 관계</h2><h2 id="연령대에-따른-월급-차이"><a href="#연령대에-따른-월급-차이" class="headerlink" title="연령대에 따른 월급 차이"></a>연령대에 따른 월급 차이</h2><h2 id="연령대-및-성별-월급-차이"><a href="#연령대-및-성별-월급-차이" class="headerlink" title="연령대 및 성별 월급 차이"></a>연령대 및 성별 월급 차이</h2><h2 id="직업별-월급-차이"><a href="#직업별-월급-차이" class="headerlink" title="직업별 월급 차이"></a>직업별 월급 차이</h2><h2 id="성별-직업-빈도"><a href="#성별-직업-빈도" class="headerlink" title="성별 직업 빈도"></a>성별 직업 빈도</h2><h2 id="종교-유무에-따른-이혼율"><a href="#종교-유무에-따른-이혼율" class="headerlink" title="종교 유무에 따른 이혼율"></a>종교 유무에 따른 이혼율</h2><h2 id="지역별-연령대-비율"><a href="#지역별-연령대-비율" class="headerlink" title="지역별 연령대 비율"></a>지역별 연령대 비율</h2>]]></content:encoded>
      
      <comments>http://everydayspring.github.io/2020/08/18/R-2020-08-18-CHAPTER09/#disqus_thread</comments>
    </item>
    
    <item>
      <title>그래프 만들기</title>
      <link>http://everydayspring.github.io/2020/07/25/R-2020-07-25-CHAPTER08/</link>
      <guid>http://everydayspring.github.io/2020/07/25/R-2020-07-25-CHAPTER08/</guid>
      <pubDate>Sat, 25 Jul 2020 07:25:03 GMT</pubDate>
      <description>
      
        R로 만들 수 있는 그래프 살펴보기
 * ggplot2 : 그래프를 만들 때 가장 많이 사용하는 패키지
 * ggplot2 레이어 : 배경 설정(축) - 그래프 추가(점, 막대, 선) - 설정 추가(축 범위, 색, 표식)

산점도 - 변수 간 관계 표현하기
 * 산점도(Scater Plot) : 데이터를 x축과 y축에 점으로 표현한 그래프
 * 나이와 소득처럼 연속 값으로 된 두 변수의 관계를 표현할 때 사용

산점도 만들기
1
2
3
4
5
6
7
8
9
10
11
12
13


&#39;  x축 y축 지정  &#39;
ggplot(data =
      
      </description>
      
      
      <content:encoded><![CDATA[<h2 id="R로-만들-수-있는-그래프-살펴보기"><a href="#R로-만들-수-있는-그래프-살펴보기" class="headerlink" title="R로 만들 수 있는 그래프 살펴보기"></a>R로 만들 수 있는 그래프 살펴보기</h2><ul><li>ggplot2 : 그래프를 만들 때 가장 많이 사용하는 패키지</li><li>ggplot2 레이어 : 배경 설정(축) - 그래프 추가(점, 막대, 선) - 설정 추가(축 범위, 색, 표식)</li></ul><h2 id="산점도-변수-간-관계-표현하기"><a href="#산점도-변수-간-관계-표현하기" class="headerlink" title="산점도 - 변수 간 관계 표현하기"></a>산점도 - 변수 간 관계 표현하기</h2><ul><li>산점도(Scater Plot) : 데이터를 x축과 y축에 점으로 표현한 그래프</li><li>나이와 소득처럼 연속 값으로 된 두 변수의 관계를 표현할 때 사용</li></ul><h3 id="산점도-만들기"><a href="#산점도-만들기" class="headerlink" title="산점도 만들기"></a>산점도 만들기</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'  x축 y축 지정  '</span></span><br><span class="line">ggplot(data = mpg, aes(x = displ, y = hwy))</span><br><span class="line"></span><br><span class="line"><span class="string">'  배경에 산점도 추가  '</span></span><br><span class="line">ggplot(data = mpg, aes(x = displ, y = hwy)) + geom_point()</span><br><span class="line"></span><br><span class="line"><span class="string">'  축 범위 지정'</span></span><br><span class="line">ggplot(data = mpg, aes(x = displ, y = hwy)) + geom_point() + xlim(<span class="number">3</span>, <span class="number">6</span>)</span><br><span class="line"></span><br><span class="line">ggplot(data = mpg, aes(x = displ, y = hwy)) +</span><br><span class="line">  geom_point() +</span><br><span class="line">  xlim(<span class="number">3</span>, <span class="number">6</span>) +</span><br><span class="line">  ylim(<span class="number">10</span>, <span class="number">30</span>)</span><br></pre></td></tr></table></figure><h3 id="실습"><a href="#실습" class="headerlink" title="실습"></a>실습</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'</span></span><br><span class="line"><span class="string">Q1. mpg 데이터의 cty(도시 연비)와 hwy(고속도로 연비) 간에 </span></span><br><span class="line"><span class="string">  어떤 관계가 있는지 알아보려고 합니다.</span></span><br><span class="line"><span class="string">  x축은 cty, y축은 hwy로 된 산점도를 만들어보세요.</span></span><br><span class="line"><span class="string">'</span></span><br><span class="line">ggplot(data = mpg, aes(x = cty, y = hwy)) +</span><br><span class="line">  geom_point()</span><br><span class="line"></span><br><span class="line"><span class="string">'</span></span><br><span class="line"><span class="string">Q2. 미국 지역별 인구통계 정보를 담은 ggplot2 패키지의 midwest 데이터를 이용해</span></span><br><span class="line"><span class="string">  전체 인구와 아시아인 인구 간에 어떤 관계가 있는지 알아보려고 합니다.</span></span><br><span class="line"><span class="string">  x축은 poptotal(전체 인구), y축은 popasian(아시아인 인구)으로 구성된 산점도를 만들어 보세요.</span></span><br><span class="line"><span class="string">  전체 인구는 50만 명 이하, 아시아인 인구는 1만 명 이하인 지역만 산점도에 표시되게 설정하세요.</span></span><br><span class="line"><span class="string">'</span></span><br><span class="line">ggplot(data = midwest, aes(x = poptotal, y = popasian)) +</span><br><span class="line">  geom_point() + </span><br><span class="line">  xlim(<span class="number">0</span>, <span class="number">500000</span>) +</span><br><span class="line">  ylim(<span class="number">0</span>, <span class="number">10000</span>)</span><br></pre></td></tr></table></figure><h2 id="막대-그래프-집단-간-차이-표현하기"><a href="#막대-그래프-집단-간-차이-표현하기" class="headerlink" title="막대 그래프 - 집단 간 차이 표현하기"></a>막대 그래프 - 집단 간 차이 표현하기</h2><ul><li>막대 그래프(Bar chart) : 데이터의 크기를 막대의 길이로 표현</li><li>성별 소득 차이처럼 집단 간 차이를 표현할 때 주로 사용</li></ul><h3 id="평균-막대-그래프-만들기"><a href="#평균-막대-그래프-만들기" class="headerlink" title="평균 막대 그래프 만들기"></a>평균 막대 그래프 만들기</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">install.packages(<span class="string">"dplyr"</span>)</span><br><span class="line"><span class="keyword">library</span>(dplyr)</span><br><span class="line"></span><br><span class="line">mpg &lt;- as.data.frame(ggplot2::mpg)</span><br><span class="line"></span><br><span class="line"><span class="string">'  집단별 평균표 만들기  '</span></span><br><span class="line">df_mpg &lt;- mpg %&gt;% </span><br><span class="line">  group_by(drv) %&gt;% </span><br><span class="line">  summarise(mean_hwy = mean(hwy))</span><br><span class="line"></span><br><span class="line">df_mpg</span><br><span class="line"></span><br><span class="line"><span class="string">'  그래프 생성하기  '</span></span><br><span class="line">ggplot(data = df_mpg, aes(x = drv, y = mean_hwy)) + geom_col()</span><br><span class="line"></span><br><span class="line"><span class="string">'  크기 순으로 정렬하기  '</span></span><br><span class="line">ggplot(data = df_mpg, aes(x = reorder(drv, -mean_hwy), y = mean_hwy)) + geom_col()</span><br><span class="line"></span><br><span class="line"><span class="string">'  빈도 막대 그래프 만들기  '</span></span><br><span class="line">ggplot(data = mpg, aes(x = drv)) + geom_bar()</span><br><span class="line"></span><br><span class="line">ggplot(data = mpg, aes(x = hwy)) + geom_bar()</span><br></pre></td></tr></table></figure><h3 id="실습-1"><a href="#실습-1" class="headerlink" title="실습"></a>실습</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'</span></span><br><span class="line"><span class="string">Q1. 어떤 회사에서 생산한 "suv" 차종의 도시 연비가 높은지 알아보려고 합니다.</span></span><br><span class="line"><span class="string">  "suv"차종을 대상으로 평균 cty(도시 연비)가 가장 높은 회사 다섯 곳을 막대 그래프로 표현해 보세요.</span></span><br><span class="line"><span class="string">  막대는 연비가 높은 순으로 정렬하세요.</span></span><br><span class="line"><span class="string">'</span></span><br><span class="line">mpg %&gt;% head()</span><br><span class="line"></span><br><span class="line">df_mpg &lt;- mpg %&gt;% </span><br><span class="line">  filter(class == <span class="string">"suv"</span>) %&gt;% </span><br><span class="line">  group_by(manufacturer) %&gt;% </span><br><span class="line">  summarise(cty_mean = mean(cty)) %&gt;% </span><br><span class="line">  arrange(desc(cty_mean)) %&gt;% </span><br><span class="line">  head(<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ggplot(data = df_mpg, aes(x = reorder(manufacturer, -cty_mean), y = cty_mean)) + geom_col()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="string">'</span></span><br><span class="line"><span class="string">Q2. 자동차 중에서 어떤 class(자동차 종류)가 가장 많은지 알아보려고 합니다.</span></span><br><span class="line"><span class="string">  자동차 종류별 빈도를 표현한 막대 그래프를 만들어 보세요.</span></span><br><span class="line"><span class="string">'</span></span><br><span class="line">ggplot(data = mpg, aes(x=class))+geom_bar()</span><br></pre></td></tr></table></figure><h2 id="선-그래프-시간에-따라-달라지는-데이터-표현하기"><a href="#선-그래프-시간에-따라-달라지는-데이터-표현하기" class="headerlink" title="선 그래프 - 시간에 따라 달라지는 데이터 표현하기"></a>선 그래프 - 시간에 따라 달라지는 데이터 표현하기</h2><ul><li>선 그래프(Line Chart) : 데이터를 선으로 표현한 그래프</li><li>시간에 따라 달라지는 데이터를 표현할 때 사용 (환율, 주가지수 등 경제지표)</li><li>시계열 데이터(Time Series Data) : 일정 시간 간격을 두고 나열된 데이터</li><li>시계열 그래프(Rime Series Chart) : 시계열 데이터를 선으로 표현한 그래프</li></ul><h3 id="시계열-그래프-만들기"><a href="#시계열-그래프-만들기" class="headerlink" title="시계열 그래프 만들기"></a>시계열 그래프 만들기</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ggplot(data = economics, aes(x = date, y = unemploy)) + geom_line()</span><br></pre></td></tr></table></figure><h3 id="실습-2"><a href="#실습-2" class="headerlink" title="실습"></a>실습</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'</span></span><br><span class="line"><span class="string">Q1. psavert(개인 저축률)가 시간에 따라 어떻게 변해 왔는지 알아보려고 합니다.</span></span><br><span class="line"><span class="string">    시간에 따른 개인 저축률의 변화를 나타낸 시계열 그래프를 만들어보세요.</span></span><br><span class="line"><span class="string">'</span></span><br><span class="line">ggplot(data = economics, aes(x = date, y = psavert)) + geom_line()</span><br></pre></td></tr></table></figure><h2 id="상자-그림-집단-간-분포-차이-표현하기"><a href="#상자-그림-집단-간-분포-차이-표현하기" class="headerlink" title="상자 그림 - 집단 간 분포 차이 표현하기"></a>상자 그림 - 집단 간 분포 차이 표현하기</h2><ul><li>상자 그림(Box Plot) : 데이터의 분포를 직사각형 상자 모양으로 표현한 그래프</li></ul><h3 id="상자-그림-만들기"><a href="#상자-그림-만들기" class="headerlink" title="상자 그림 만들기"></a>상자 그림 만들기</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ggplot(data = mpg, aes(x = drv, y = hwy)) + geom_boxplot()</span><br></pre></td></tr></table></figure><h3 id="실습-3"><a href="#실습-3" class="headerlink" title="실습"></a>실습</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Q1. class(자동차 종류)가 <span class="string">"compact"</span>, <span class="string">"subcompact"</span>, <span class="string">"suv"</span>인 자동차의 </span><br><span class="line">    cty(도시 연비)가 어떻게 다른지 비교해 보려고 합니다.</span><br><span class="line">    세 차종의 cty를 나타낸 상자 그림을 만들어 보세요.</span><br><span class="line"><span class="string">'</span></span><br><span class="line"><span class="string">df_mpg &lt;- mpg %&gt;% </span></span><br><span class="line"><span class="string">            filter(class %in% c("compact", "subcompact", "suv"))</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">ggplot(data = df_mpg, aes(x = class, y = cty)) + geom_boxplot()</span></span><br></pre></td></tr></table></figure><p>##정리</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'  1. 산점도  '</span></span><br><span class="line">ggplot(data = mpg, aes(x = displ, y = hwy)) + geom_point()</span><br><span class="line"></span><br><span class="line"><span class="string">'  축 설정 추가  '</span></span><br><span class="line">ggplot(data = mpg, aes(x = displ, y = hwy)) + </span><br><span class="line">  geom_point() +</span><br><span class="line">  xlim(<span class="number">3</span>,<span class="number">6</span>) +</span><br><span class="line">  ylim(<span class="number">10</span>,<span class="number">30</span>)</span><br><span class="line"></span><br><span class="line"><span class="string">'  2. 평균 막대 그래프  '</span></span><br><span class="line"><span class="string">'  1단계. 평균표 만들기  '</span></span><br><span class="line">df_mpg &lt;- mpg %&gt;% </span><br><span class="line">  group_by(drv) %&gt;% </span><br><span class="line">  summarise(mean_hwy = mean(hwy))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="string">'  2단계. 그래프 생성하기, 크기순 정렬하기  '</span></span><br><span class="line">ggplot(data = df_mpg, aes(x = reorder(drv, -mean_hwy), y = mean_hwy)) + geom_col()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="string">'  3. 빈도 막대 그래프  '</span></span><br><span class="line">ggplot(data = mpg, aes(x = drv)) + geom_bar()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="string">'  4. 선 그래프  '</span></span><br><span class="line">ggplot(data = economics, aes(x = date, y = unemploy)) + geom_line()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="string">'  5. 상자 그림  '</span></span><br><span class="line">ggplot(data = mpg, aes(x = drv, y = hwy)) + geom_boxplot()</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>http://everydayspring.github.io/2020/07/25/R-2020-07-25-CHAPTER08/#disqus_thread</comments>
    </item>
    
    <item>
      <title>R 데이터 정제</title>
      <link>http://everydayspring.github.io/2020/07/21/R-2020-07-21-CHAPTER07/</link>
      <guid>http://everydayspring.github.io/2020/07/21/R-2020-07-21-CHAPTER07/</guid>
      <pubDate>Tue, 21 Jul 2020 07:05:41 GMT</pubDate>
      <description>
      
        빠진 데이터 처리
결측치(Missing Value)
 * 누락된 값, 비어있는 값
 * 함수 적용 불가, 분석 결과 왜곡
 * 제거 후 분석 실시

결측치 찾기
결측치 만들기
 * 결측치 표기 - 대문자 NA

1
2
3
4
5
6
7
8
9


df &lt;- data.frame(sex = c(&quot;M&quot;, &quot;F&quot;, NA, &quot;M&quot;, &quot;F&quot;),
				 score = c(5, 4, 3, 4, NA))
df
##    sex score
## 1    M     5
## 2    F     4
## 3 &lt;NA&gt;     3
## 4    M    
      
      </description>
      
      
      <content:encoded><![CDATA[<h2 id="빠진-데이터-처리"><a href="#빠진-데이터-처리" class="headerlink" title="빠진 데이터 처리"></a>빠진 데이터 처리</h2><h3 id="결측치-Missing-Value"><a href="#결측치-Missing-Value" class="headerlink" title="결측치(Missing Value)"></a>결측치(Missing Value)</h3><ul><li>누락된 값, 비어있는 값</li><li>함수 적용 불가, 분석 결과 왜곡</li><li>제거 후 분석 실시</li></ul><h3 id="결측치-찾기"><a href="#결측치-찾기" class="headerlink" title="결측치 찾기"></a>결측치 찾기</h3><h4 id="결측치-만들기"><a href="#결측치-만들기" class="headerlink" title="결측치 만들기"></a>결측치 만들기</h4><ul><li>결측치 표기 - 대문자 NA</li></ul><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">df &lt;- data.frame(sex = c(<span class="string">"M"</span>, <span class="string">"F"</span>, <span class="literal">NA</span>, <span class="string">"M"</span>, <span class="string">"F"</span>),</span><br><span class="line"> score = c(<span class="number">5</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="literal">NA</span>))</span><br><span class="line">df</span><br><span class="line"><span class="comment">##    sex score</span></span><br><span class="line"><span class="comment">## 1    M     5</span></span><br><span class="line"><span class="comment">## 2    F     4</span></span><br><span class="line"><span class="comment">## 3 &lt;NA&gt;     3</span></span><br><span class="line"><span class="comment">## 4    M     4</span></span><br><span class="line"><span class="comment">## 5    F    NA</span></span><br></pre></td></tr></table></figure><h4 id="결측치-확인하기"><a href="#결측치-확인하기" class="headerlink" title="결측치 확인하기"></a>결측치 확인하기</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">is.na(df)</span><br><span class="line"><span class="comment">##        sex score</span></span><br><span class="line"><span class="comment">## [1,] FALSE FALSE</span></span><br><span class="line"><span class="comment">## [2,] FALSE FALSE</span></span><br><span class="line"><span class="comment">## [3,]  TRUE FALSE</span></span><br><span class="line"><span class="comment">## [4,] FALSE FALSE</span></span><br><span class="line"><span class="comment">## [5,] FALSE  TRUE</span></span><br><span class="line"></span><br><span class="line">table(is.na(df))</span><br><span class="line"><span class="comment">## FALSE  TRUE </span></span><br><span class="line"><span class="comment">##     8     2</span></span><br></pre></td></tr></table></figure><h4 id="변수별로-결측치-확인하기"><a href="#변수별로-결측치-확인하기" class="headerlink" title="변수별로 결측치 확인하기"></a>변수별로 결측치 확인하기</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">table(is.na(df$sex))</span><br><span class="line"><span class="comment">## FALSE  TRUE </span></span><br><span class="line"><span class="comment">##     4     1 </span></span><br><span class="line"></span><br><span class="line">table(is.na(df$score))</span><br><span class="line"><span class="comment">## FALSE  TRUE </span></span><br><span class="line"><span class="comment">##     4     1</span></span><br></pre></td></tr></table></figure><h4 id="결측치-포함된-상태로-분석"><a href="#결측치-포함된-상태로-분석" class="headerlink" title="결측치 포함된 상태로 분석"></a>결측치 포함된 상태로 분석</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mean(df$score)</span><br><span class="line"><span class="comment">## [1] NA</span></span><br><span class="line"></span><br><span class="line">sum(df$score)</span><br><span class="line"><span class="comment">## [1] NA</span></span><br></pre></td></tr></table></figure><h3 id="결측치-제거하기"><a href="#결측치-제거하기" class="headerlink" title="결측치 제거하기"></a>결측치 제거하기</h3><ul><li>결측치가 있는 행 제거</li><li>결측치에 값 대입하기<ul><li>평균값</li><li>최빈값 : 가장 많이 등장한 값</li><li>다른값 적용 : 머신러닝 / 딥러닝</li></ul></li></ul><h4 id="결측치-있는-행-제거하기"><a href="#결측치-있는-행-제거하기" class="headerlink" title="결측치 있는 행 제거하기"></a>결측치 있는 행 제거하기</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">df %&gt;% filter(is.na(score))</span><br><span class="line"><span class="comment">##   sex score</span></span><br><span class="line"><span class="comment">## 1   F    NA</span></span><br><span class="line"></span><br><span class="line">df %&gt;% filter(!is.na(score))</span><br><span class="line"><span class="comment">##    sex score</span></span><br><span class="line"><span class="comment">## 1    M     5</span></span><br><span class="line"><span class="comment">## 2    F     4</span></span><br><span class="line"><span class="comment">## 3 &lt;NA&gt;     3</span></span><br><span class="line"><span class="comment">## 4    M     4</span></span><br></pre></td></tr></table></figure><h4 id="결측치-제외한-데이터로-분석하기"><a href="#결측치-제외한-데이터로-분석하기" class="headerlink" title="결측치 제외한 데이터로 분석하기"></a>결측치 제외한 데이터로 분석하기</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">df_nomiss &lt;- df %&gt;% filter(!is.na(score))</span><br><span class="line">mean(df_nomiss$score)</span><br><span class="line"><span class="comment">## [1] 4</span></span><br><span class="line"></span><br><span class="line">sum(df_nomiss$score)</span><br><span class="line"><span class="comment">## [1] 16</span></span><br></pre></td></tr></table></figure><h4 id="여러-변수-동시에-결측치-없는-데이터-추출하기"><a href="#여러-변수-동시에-결측치-없는-데이터-추출하기" class="headerlink" title="여러 변수 동시에 결측치 없는 데이터 추출하기"></a>여러 변수 동시에 결측치 없는 데이터 추출하기</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">df_nomiss &lt;- df %&gt;% filter(!is.na(score) &amp; !is.na(sex))</span><br><span class="line">df_nomiss</span><br><span class="line"><span class="comment">##   sex score</span></span><br><span class="line"><span class="comment">## 1   M     5</span></span><br><span class="line"><span class="comment">## 2   F     4</span></span><br><span class="line"><span class="comment">## 3   M     4</span></span><br></pre></td></tr></table></figure><h4 id="결측치가-하나라도-있으면-제거하기"><a href="#결측치가-하나라도-있으면-제거하기" class="headerlink" title="결측치가 하나라도 있으면 제거하기"></a>결측치가 하나라도 있으면 제거하기</h4><ul><li>분석에 필요한 데이터까지 손실 될 가능성 유의</li></ul><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">df_nomiss2 &lt;- na.omit(df)</span><br><span class="line">df_nomiss2</span><br><span class="line"><span class="comment">##   sex score</span></span><br><span class="line"><span class="comment">## 1   M     5</span></span><br><span class="line"><span class="comment">## 2   F     4</span></span><br><span class="line"><span class="comment">## 4   M     4</span></span><br></pre></td></tr></table></figure><h4 id="함수의-결측치-제외-기능-이용하기"><a href="#함수의-결측치-제외-기능-이용하기" class="headerlink" title="함수의 결측치 제외 기능 이용하기"></a>함수의 결측치 제외 기능 이용하기</h4><ul><li>na.rm = T</li></ul><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mean(df$score, na.rm = <span class="literal">T</span>)</span><br><span class="line"><span class="comment">## [1] 4</span></span><br><span class="line"></span><br><span class="line">sum(df$score, na.rm = <span class="literal">T</span>)</span><br><span class="line"><span class="comment">## [1] 16</span></span><br></pre></td></tr></table></figure><ul><li>summarise()에서 na.rm = T 사용하기</li></ul><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">' 결측치 생성 '</span></span><br><span class="line">exam &lt;- read.csv(<span class="string">"csv_exam.csv"</span>)</span><br><span class="line">exam[c(<span class="number">3</span>, <span class="number">8</span>, <span class="number">15</span>), <span class="string">"math"</span>] &lt;- <span class="literal">NA</span></span><br><span class="line"></span><br><span class="line"><span class="string">' 평균 구하기 '</span></span><br><span class="line">exam %&gt;% summarise(mean_math = mean(math))</span><br><span class="line"><span class="comment">##   mean_math</span></span><br><span class="line"><span class="comment">## 1        NA</span></span><br><span class="line"></span><br><span class="line">exam %&gt;% summarise(mean_math = mean(math, na.rm = <span class="literal">T</span>))</span><br><span class="line"><span class="comment">##   mean_math</span></span><br><span class="line"><span class="comment">## 1  55.23529</span></span><br></pre></td></tr></table></figure><h4 id="다른-함수들에-적용"><a href="#다른-함수들에-적용" class="headerlink" title="다른 함수들에 적용"></a>다른 함수들에 적용</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">exam %&gt;% summarise(mean_math = mean(math, na.rm = <span class="literal">T</span>),</span><br><span class="line">                   sum_math = sum(math, na.rm = <span class="literal">T</span>),</span><br><span class="line">                   median_math = median(math, na.rm = <span class="literal">T</span>))</span><br><span class="line"><span class="comment">##   mean_math sum_math median_math</span></span><br><span class="line"><span class="comment">## 1  55.23529      939          50</span></span><br></pre></td></tr></table></figure><h3 id="결측치-대체하기"><a href="#결측치-대체하기" class="headerlink" title="결측치 대체하기"></a>결측치 대체하기</h3><ul><li>결측치가 많을 경우 모두 제외하면 데이터 손실이 큼</li><li>대안: 다른 값 채워넣기</li></ul><h4 id="결측치-대체법-Imputation"><a href="#결측치-대체법-Imputation" class="headerlink" title="결측치 대체법(Imputation)"></a>결측치 대체법(Imputation)</h4><ul><li>대표값(평균, 최빈값 등)으로 일괄 대체</li><li>통계분석 기법 적용, 예측값 추정해서 대체</li></ul><h4 id="평균값으로-결측치-대체하기"><a href="#평균값으로-결측치-대체하기" class="headerlink" title="평균값으로 결측치 대체하기"></a>평균값으로 결측치 대체하기</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">' 평균 구하기 '</span></span><br><span class="line">mean(exam$math, na.rm = <span class="literal">T</span>)</span><br><span class="line"><span class="comment">## [1] 55.23529</span></span><br><span class="line"></span><br><span class="line"><span class="string">' 평균으로 대체하기 '</span></span><br><span class="line">exam$math &lt;- ifelse(is.na(exam$math), <span class="number">55</span>, exam$math)</span><br><span class="line">table(is.na(exam$math))</span><br><span class="line"><span class="comment">## FALSE </span></span><br><span class="line"><span class="comment">##    20</span></span><br></pre></td></tr></table></figure><h3 id="실습"><a href="#실습" class="headerlink" title="실습"></a>실습</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">' mpg 데이터 결측치 만들기 '</span></span><br><span class="line">mpg &lt;- as.data.frame(ggplot2::mpg)</span><br><span class="line">mpg[c(<span class="number">65</span>, <span class="number">124</span>, <span class="number">131</span>, <span class="number">153</span>, <span class="number">212</span>), <span class="string">"hwy"</span>] &lt;- <span class="literal">NA</span></span><br><span class="line"></span><br><span class="line"><span class="string">'</span></span><br><span class="line"><span class="string">Q1. drv(구동방식)별로 hwy(고속도로 연비) 평균이 어떻게 다른지 알아보려고 합니다. </span></span><br><span class="line"><span class="string">분석을 하기 전에 우선 두 변수에 결측치가 있는지 확인해야 합니다.</span></span><br><span class="line"><span class="string">dvr 변수와 hwy 변수에 결측치가 몇 개 있는지 알아보세요.</span></span><br><span class="line"><span class="string">'</span></span><br><span class="line">table(is.na(mpg$drv))</span><br><span class="line">table(is.na(mpg$hwy))</span><br><span class="line"></span><br><span class="line"><span class="string">'</span></span><br><span class="line"><span class="string">Q2. filter()를 이용해 hwy 변수의 결측치를 제외하고, </span></span><br><span class="line"><span class="string">어떤 구동방식의 hwy 평균이 높은지 알아보세요. </span></span><br><span class="line"><span class="string">하나의 dplyr 구문으로 만들어야 합니다.</span></span><br><span class="line"><span class="string">'</span></span><br><span class="line">mpg %&gt;% </span><br><span class="line">  filter(!is.na(hwy)) %&gt;% </span><br><span class="line">  group_by(drv) %&gt;% </span><br><span class="line">  summarise(mean_hwy = mean(hwy))</span><br></pre></td></tr></table></figure><h2 id="이상한-값을-가진-데이터-처리"><a href="#이상한-값을-가진-데이터-처리" class="headerlink" title="이상한 값을 가진 데이터 처리"></a>이상한 값을 가진 데이터 처리</h2><h3 id="이상치-제거하기"><a href="#이상치-제거하기" class="headerlink" title="이상치 제거하기"></a>이상치 제거하기</h3><ul><li>정상범위의 기준을 정해서 벗어나면 결측 처리<ul><li>논리적 판단 : 성인 몸무게 50kg ~ 150kg 벗어나면 극단치</li><li>통계적 판단 : 상하위 0.3% 극단치 또는 상자그림 1.5IQR 벗어나면 극단치</li></ul></li></ul><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">outlier &lt;- data.frame(sex = c(<span class="number">1</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">1</span>),</span><br><span class="line">                      score = c(<span class="number">5</span>,<span class="number">4</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">2</span>,<span class="number">6</span>))</span><br><span class="line">outlier</span><br><span class="line"></span><br><span class="line"><span class="string">' 이상치 확인하기 '</span></span><br><span class="line">table(outlier$sex)</span><br><span class="line">table(outlier$score)</span><br><span class="line"></span><br><span class="line"><span class="string">' 결측 처리하기 '</span></span><br><span class="line">outlier$sex &lt;- ifelse(outlier$sex == <span class="number">3</span>, <span class="literal">NA</span>, outlier$sex)</span><br><span class="line">outlier$score &lt;- ifelse(outlier$score &gt; <span class="number">5</span>, <span class="literal">NA</span>, outlier$score)</span><br><span class="line">outlier</span><br><span class="line"></span><br><span class="line">install.packages(<span class="string">"dplyr"</span>)</span><br><span class="line"><span class="keyword">library</span>(dplyr)</span><br><span class="line"></span><br><span class="line">outlier %&gt;% </span><br><span class="line">  filter(!is.na(sex) &amp; !is.na(score)) %&gt;% </span><br><span class="line">  group_by(sex) %&gt;% </span><br><span class="line">  summarise(mean_score = mean(score))</span><br></pre></td></tr></table></figure><h4 id="상자-그림으로-극단치-기준-정하기"><a href="#상자-그림으로-극단치-기준-정하기" class="headerlink" title="상자 그림으로 극단치 기준 정하기"></a>상자 그림으로 극단치 기준 정하기</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">install.packages(<span class="string">"ggplot2"</span>)</span><br><span class="line"><span class="keyword">library</span>(ggplot2)</span><br><span class="line"></span><br><span class="line">mpg &lt;- as.data.frame(ggplot2::mpg)</span><br><span class="line">boxplot(mpg$hwy)</span><br><span class="line"></span><br><span class="line"><span class="string">'  상자 그림 통계치 출력  '</span></span><br><span class="line">boxplot(mpg$hwy)$stats</span><br><span class="line"></span><br><span class="line"><span class="string">'  결측 처리하기  '</span></span><br><span class="line">mpg$hwy &lt;- ifelse(mpg$hwy &lt; <span class="number">12</span> | mpg$hwy &gt; <span class="number">37</span>, <span class="literal">NA</span>, mpg$hwy)</span><br><span class="line">table(is.na(mpg$hwy))</span><br><span class="line"></span><br><span class="line">mpg %&gt;% </span><br><span class="line">  group_by(drv) %&gt;% </span><br><span class="line">  summarise(mean_hwy = mean(hwy, na.rm = <span class="literal">T</span>))</span><br></pre></td></tr></table></figure><h3 id="실습-1"><a href="#실습-1" class="headerlink" title="실습"></a>실습</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">mpg &lt;- as.data.frame(ggplot2::mpg)</span><br><span class="line">mpg[c(<span class="number">10</span>, <span class="number">14</span>, <span class="number">58</span>, <span class="number">93</span>), <span class="string">"drv"</span>] &lt;- <span class="string">"k"</span></span><br><span class="line">mpg[c(<span class="number">29</span>, <span class="number">43</span>, <span class="number">129</span>, <span class="number">203</span>), <span class="string">"cty"</span>] &lt;- c(<span class="number">3</span>, <span class="number">4</span>, <span class="number">39</span>, <span class="number">42</span>)</span><br><span class="line"></span><br><span class="line"><span class="string">'</span></span><br><span class="line"><span class="string">Q1. drv에 이상치가 있는지 확인하세요.</span></span><br><span class="line"><span class="string">  이상치를 결측 처리한 후 이상치가 사라졌는지 확인하세요.</span></span><br><span class="line"><span class="string">  결측 처리를 할 때는 %in% 기호를 활용하세요.</span></span><br><span class="line"><span class="string">'</span></span><br><span class="line">mpg$drv &lt;- ifelse(mpg$drv %<span class="keyword">in</span>% c(<span class="string">"4"</span>,<span class="string">"f"</span>,<span class="string">"r"</span>), mpg$drv, <span class="literal">NA</span>)</span><br><span class="line">table(mpg$drv)</span><br><span class="line"></span><br><span class="line"><span class="string">'</span></span><br><span class="line"><span class="string">Q2. 상자 그림을 이용해 cty에 이상치가 있는지 확인하세요.</span></span><br><span class="line"><span class="string">  상자 그림의 통계치를 이용해 정상 범위를 벗어난 값을 결측 처리한 후 </span></span><br><span class="line"><span class="string">  다시 상자 그림을 만들어 이상치가 사라졌는지 확인하세요.</span></span><br><span class="line"><span class="string">'</span></span><br><span class="line">boxplot(mpg$cty)$stats</span><br><span class="line">mpg$cty &lt;- ifelse(mpg$cty &lt; <span class="number">9</span> | mpg$cty &gt; <span class="number">26</span>, <span class="literal">NA</span>, mpg$cty)</span><br><span class="line">table(is.na(mpg$cty))</span><br><span class="line">boxplot(mpg$cty)</span><br><span class="line"></span><br><span class="line"><span class="string">'</span></span><br><span class="line"><span class="string">Q3. 두 변수의 이상치를 결측 처리 했으니 이제 분석할 차례입니다.</span></span><br><span class="line"><span class="string">  이상치를 제외한 다음 drv별로 cty 평균이 어떻게 다른지 알아보세요.</span></span><br><span class="line"><span class="string">  하나의 dplyr 구문으로 만들어야 합니다.</span></span><br><span class="line"><span class="string">'</span></span><br><span class="line">mpg %&gt;%</span><br><span class="line">  filter(!is.na(drv) &amp; !is.na(cty)) %&gt;% </span><br><span class="line">  group_by(drv) %&gt;% </span><br><span class="line">  summarise(mean_cty = mean(cty))</span><br></pre></td></tr></table></figure><h2 id="정리"><a href="#정리" class="headerlink" title="정리"></a>정리</h2> <figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'  1.결측치 정제하기  '</span></span><br><span class="line"><span class="string">'  결측치 확인  '</span></span><br><span class="line">table(is.na(df$score))</span><br><span class="line"></span><br><span class="line"><span class="string">'  결측치 제거  '</span></span><br><span class="line">df_nomiss &lt;- df %&gt;% filter(!is.na(score))</span><br><span class="line"></span><br><span class="line"><span class="string">'  여러 변수 동시에 결측치 제거  '</span></span><br><span class="line">df_nomiss &lt;- df %&gt;% filter(!is.na(score) &amp; !is.na(sex))</span><br><span class="line"></span><br><span class="line"><span class="string">'  함수의 결측치 제외 기능 이용하기  '</span></span><br><span class="line">mean(df$score, na.rm = <span class="literal">T</span>)</span><br><span class="line">exam %&gt;% summarise(mean_math = mean(math, na.rm = <span class="literal">T</span>))</span><br><span class="line"></span><br><span class="line"><span class="string">'  2.이상치 제거하기  '</span></span><br><span class="line"><span class="string">'  이상치 확인  '</span></span><br><span class="line">table(outlier$sex)</span><br><span class="line"></span><br><span class="line"><span class="string">'  결측 처리  '</span></span><br><span class="line">outlier$sex &lt;- ifelse(outlier$sex == <span class="number">3</span>, <span class="literal">NA</span>, outlier$sex)</span><br><span class="line"></span><br><span class="line"><span class="string">'  boxplot으로 극단치 기준 찾기  '</span></span><br><span class="line">boxplot(mpg$hwy)$stats</span><br><span class="line"></span><br><span class="line"><span class="string">'  극단치 결측 처리  '</span></span><br><span class="line">mpg$hwy &lt;- ifelse(mpg$hwy &lt; <span class="number">12</span> | mpg$hwy &gt; <span class="number">37</span>, <span class="literal">NA</span>, mpg$hwy)</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>http://everydayspring.github.io/2020/07/21/R-2020-07-21-CHAPTER07/#disqus_thread</comments>
    </item>
    
    <item>
      <title>R 데이터 가공하기</title>
      <link>http://everydayspring.github.io/2020/07/17/R-2020-07-17-data/</link>
      <guid>http://everydayspring.github.io/2020/07/17/R-2020-07-17-data/</guid>
      <pubDate>Fri, 17 Jul 2020 02:47:15 GMT</pubDate>
      <description>
      
        데이터 전처리
원하는 형태로 데이터 가공하기
 * 데이터 전처리(Preprocessing) - dplyr 패키지

함수기능filter()행 추출select()열(변수) 추출arrange()정렬mutate()변수 추가summarise()통계치 산출group_by()집단별로 나누기left_join()데이터 합치기(열)bind_rows()데이터 합치기(행)조건에 맞는 데이터만 추출하기 (행)
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18


library(dplyr)
exam &lt;- read.csv(&quot;cs
      
      </description>
      
      
      <content:encoded><![CDATA[<h2 id="데이터-전처리"><a href="#데이터-전처리" class="headerlink" title="데이터 전처리"></a>데이터 전처리</h2><h3 id="원하는-형태로-데이터-가공하기"><a href="#원하는-형태로-데이터-가공하기" class="headerlink" title="원하는 형태로 데이터 가공하기"></a>원하는 형태로 데이터 가공하기</h3><ul><li>데이터 전처리(Preprocessing) - dplyr 패키지</li></ul><table><thead><tr><th align="center">함수</th><th align="center">기능</th></tr></thead><tbody><tr><td align="center">filter()</td><td align="center">행 추출</td></tr><tr><td align="center">select()</td><td align="center">열(변수) 추출</td></tr><tr><td align="center">arrange()</td><td align="center">정렬</td></tr><tr><td align="center">mutate()</td><td align="center">변수 추가</td></tr><tr><td align="center">summarise()</td><td align="center">통계치 산출</td></tr><tr><td align="center">group_by()</td><td align="center">집단별로 나누기</td></tr><tr><td align="center">left_join()</td><td align="center">데이터 합치기(열)</td></tr><tr><td align="center">bind_rows()</td><td align="center">데이터 합치기(행)</td></tr></tbody></table><h2 id="조건에-맞는-데이터만-추출하기-행"><a href="#조건에-맞는-데이터만-추출하기-행" class="headerlink" title="조건에 맞는 데이터만 추출하기 (행)"></a>조건에 맞는 데이터만 추출하기 (행)</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">library</span>(dplyr)</span><br><span class="line">exam &lt;- read.csv(<span class="string">"csv_exam.csv"</span>)</span><br><span class="line">exam</span><br><span class="line"></span><br><span class="line"><span class="comment"># [Ctrl+Shit+M]</span></span><br><span class="line">exam %&gt;% filter(class == <span class="number">1</span>)</span><br><span class="line">exam %&gt;% filter(class == <span class="number">2</span>)</span><br><span class="line">exam %&gt;% filter(class != <span class="number">1</span>)</span><br><span class="line">exam %&gt;% filter(class != <span class="number">3</span>)</span><br><span class="line"></span><br><span class="line">exam %&gt;% filter(math &gt; <span class="number">50</span>)</span><br><span class="line">exam %&gt;% filter(English &lt; <span class="number">80</span>)</span><br><span class="line"></span><br><span class="line">exam %&gt;% filter(class == <span class="number">1</span> &amp; math &gt;= <span class="number">50</span>)</span><br><span class="line">exam %&gt;% filter(math &gt;= <span class="number">90</span> | English &gt;=<span class="number">90</span>)</span><br><span class="line"></span><br><span class="line">exam %&gt;% filter(class == <span class="number">1</span> | class == <span class="number">3</span>| class == <span class="number">5</span>)</span><br><span class="line">exam %&gt;% filter(class %<span class="keyword">in</span>% c(<span class="number">1</span>,<span class="number">3</span>,<span class="number">5</span>))</span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">''</span><span class="string">' 추출한 행으로 데이터 만들기 '</span><span class="string">''</span></span><br><span class="line">class1 &lt;- exam %&gt;% filter(class == <span class="number">1</span>)</span><br><span class="line">class2 &lt;- exam %&gt;% filter(class == <span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">mean(class1$math)</span><br><span class="line">mean(class2$math)</span><br></pre></td></tr></table></figure><ul><li>R에서 사용하는 기호들</li></ul><table><thead><tr><th align="center">논리연산자</th><th align="center">기능</th></tr></thead><tbody><tr><td align="center">&lt;</td><td align="center">작다</td></tr><tr><td align="center">&lt;=</td><td align="center">작거나 같다</td></tr><tr><td align="center">&gt;</td><td align="center">크다</td></tr><tr><td align="center">&gt;=</td><td align="center">크거나 같다</td></tr><tr><td align="center">==</td><td align="center">같다</td></tr><tr><td align="center">!=</td><td align="center">같지 않다</td></tr><tr><td align="center">&#124;</td><td align="center">또는</td></tr><tr><td align="center">&amp;</td><td align="center">그리고</td></tr><tr><td align="center">%in%</td><td align="center">매칭 확인</td></tr></tbody></table><table><thead><tr><th align="center">산술 연산자</th><th align="center">기능</th></tr></thead><tbody><tr><td align="center">+</td><td align="center">더하기</td></tr><tr><td align="center">-</td><td align="center">빼기</td></tr><tr><td align="center">*</td><td align="center">곱하기</td></tr><tr><td align="center">/</td><td align="center">나누기</td></tr><tr><td align="center">^, **</td><td align="center">제곱</td></tr><tr><td align="center">%/%</td><td align="center">나눗셈의 몫</td></tr><tr><td align="center">%%</td><td align="center">나눗셈의 나머지</td></tr></tbody></table><h3 id="실습"><a href="#실습" class="headerlink" title="실습"></a>실습</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">''</span><span class="string">'</span></span><br><span class="line"><span class="string">Q1. 자동차 배기량에 따라 고속도로 연비가 다른지 알아보려고 합니다. </span></span><br><span class="line"><span class="string">displ(배기량)이 4 이하인 자동차와 5 이상인 자동차 중 </span></span><br><span class="line"><span class="string">어떤 자동차의 hwy(고속도로 연비)가 평균적으로 더 높은지 알아보세요.</span></span><br><span class="line"><span class="string">'</span><span class="string">''</span></span><br><span class="line">mpg &lt;- as.data.frame(ggplot2::mpg)</span><br><span class="line">mpg</span><br><span class="line"></span><br><span class="line">mpg_1 &lt;- mpg %&gt;% filter(displ &lt;= <span class="number">4</span>)</span><br><span class="line">mpg_2 &lt;- mpg %&gt;% filter(displ &gt; <span class="number">5</span>)</span><br><span class="line">mean(mpg_1$hwy)</span><br><span class="line">mean(mpg_2$hwy)</span><br><span class="line"></span><br><span class="line"><span class="string">''</span><span class="string">'</span></span><br><span class="line"><span class="string">Q2. 자동차 제조 회사에 따라 도시 연비가 다른지 알아보려고 합니다. </span></span><br><span class="line"><span class="string">"audi"와 "toyota" 중 어느 manufacturer(자동차 제조 회사)의 </span></span><br><span class="line"><span class="string">cty(도시 연비)가 평균적으로 더 높은지 알아보세요.</span></span><br><span class="line"><span class="string">'</span><span class="string">''</span></span><br><span class="line">mpg_audi &lt;- mpg %&gt;% filter(manufacturer == <span class="string">"audi"</span>)</span><br><span class="line">mpg_toyota &lt;- mpg %&gt;% filter(manufacturer == <span class="string">"toyota"</span>)</span><br><span class="line">mean(mpg_audi$cty)</span><br><span class="line">mean(mpg_toyota$cty)</span><br><span class="line"></span><br><span class="line">mean((mpg %&gt;% filter(manufacturer == <span class="string">"audi"</span>))$cty)</span><br><span class="line"></span><br><span class="line"><span class="string">''</span><span class="string">'</span></span><br><span class="line"><span class="string">Q3. "chevrolet","ford","honda"자동타의 고속도로 연비 평균을 알아보려고 합니다. </span></span><br><span class="line"><span class="string">이 회사들의 자동차를 추출한 뒤 hwy 전체 평균을 구해보세요.</span></span><br><span class="line"><span class="string">'</span><span class="string">''</span></span><br><span class="line">mpg_3 &lt;- mpg %&gt;% filter(manufacturer %<span class="keyword">in</span>% c(<span class="string">"chevrolet"</span>,<span class="string">"ford"</span>,<span class="string">"honda"</span>))</span><br><span class="line">mean(mpg_3$hwy)</span><br></pre></td></tr></table></figure><h2 id="필요한-변수만-추출하기"><a href="#필요한-변수만-추출하기" class="headerlink" title="필요한 변수만 추출하기"></a>필요한 변수만 추출하기</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">exam %&gt;% select(math)</span><br><span class="line">exam %&gt;% select(math, english)</span><br><span class="line"></span><br><span class="line">exam %&gt;% select(-math)</span><br><span class="line">exam %&gt;% select(-math, -english)</span><br><span class="line"></span><br><span class="line">exam %&gt;% filter(class == <span class="number">1</span>) %&gt;% select(english)</span><br><span class="line">exam %&gt;%</span><br><span class="line">  filter(class == <span class="number">1</span>) %&gt;% </span><br><span class="line">  select(english)</span><br><span class="line"></span><br><span class="line">exam %&gt;%</span><br><span class="line">  select(id, math) %&gt;%</span><br><span class="line">  head(<span class="number">10</span>)</span><br></pre></td></tr></table></figure><h3 id="실습-1"><a href="#실습-1" class="headerlink" title="실습"></a>실습</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">''</span><span class="string">'</span></span><br><span class="line"><span class="string">Q1. mpg데이터는 11개 변수로 구성되어 있습니다. </span></span><br><span class="line"><span class="string">    이 중 일부만 추출해서 분석에 활용하려고 합니다. </span></span><br><span class="line"><span class="string">    mpg 데이터에서 class(자동차 종류), cty(도시 연비) 변수를 추출해 새로운 데이터를 만드세요. </span></span><br><span class="line"><span class="string">    새로 만든 데이터의 일부를 출력해서 두 변수로만 구성되어 있는지 확인하세요.</span></span><br><span class="line"><span class="string">'</span><span class="string">''</span></span><br><span class="line">mpg_sub &lt;- mpg %&gt;% </span><br><span class="line">            select(class, cty)</span><br><span class="line">head(mpg_sub)</span><br><span class="line">dim(mpg_sub)</span><br><span class="line"></span><br><span class="line"><span class="string">''</span><span class="string">'</span></span><br><span class="line"><span class="string">Q2. 자동차 종류에 따라 도시 연비가 다른지 알아보려고 합니다. </span></span><br><span class="line"><span class="string">    앞에서 추출한 데이터를 이용해서 class(자동차 종류)가 </span></span><br><span class="line"><span class="string">    "suv"인 자동차와 "compact"인 자동차 중 어떤 자동차의 cty(도시 연비)가 더 높은지 알아보세요.</span></span><br><span class="line"><span class="string">'</span><span class="string">''</span></span><br><span class="line">mpg_suv &lt;- mpg_sub %&gt;% filter(class == <span class="string">"suv"</span>)</span><br><span class="line">mpg_compact &lt;- mpg_sub %&gt;% filter(class == <span class="string">"compact"</span>)</span><br><span class="line">mean(mpg_suv$cty)</span><br><span class="line">mean(mpg_compact$cty)</span><br></pre></td></tr></table></figure><h2 id="순서대로-정렬하기"><a href="#순서대로-정렬하기" class="headerlink" title="순서대로 정렬하기"></a>순서대로 정렬하기</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">exam %&gt;% arrange(math)<span class="comment"># math 오름차순 정렬</span></span><br><span class="line">exam %&gt;% arrange(desc(math))<span class="comment"># descend</span></span><br><span class="line"></span><br><span class="line">exam %&gt;% arrange(class, math)</span><br></pre></td></tr></table></figure><h3 id="실습-2"><a href="#실습-2" class="headerlink" title="실습"></a>실습</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">''</span><span class="string">'</span></span><br><span class="line"><span class="string">"audi"에서 생산한 자동차 중에 어떤 자동차 모델의 hwy(고속도로 연비)가 높은지 알아보려고 합니다.</span></span><br><span class="line"><span class="string">"audi"에서 생산한 자동차 중 hwy가 1 ~ 5위에 해당하는 자동차의 데이터를 출력하세요.</span></span><br><span class="line"><span class="string">'</span><span class="string">''</span></span><br><span class="line">mpg_audi %&gt;% </span><br><span class="line">  arrange(desc(hwy)) %&gt;% </span><br><span class="line">  head(<span class="number">5</span>)</span><br></pre></td></tr></table></figure><h2 id="새로운-변수-추가하기"><a href="#새로운-변수-추가하기" class="headerlink" title="새로운 변수 추가하기"></a>새로운 변수 추가하기</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">exam %&gt;%</span><br><span class="line">  mutate(total = math + english + science) %&gt;%</span><br><span class="line">  head</span><br><span class="line"></span><br><span class="line">exam %&gt;%</span><br><span class="line">  mutate(total = math + english + science,</span><br><span class="line">         mean = (math + english + science)/<span class="number">3</span>) %&gt;%</span><br><span class="line">  head</span><br><span class="line"></span><br><span class="line">exam %&gt;%</span><br><span class="line">  mutate(test = ifelse(science &gt;= <span class="number">60</span>, <span class="string">"pass"</span>, <span class="string">"fail"</span>)) %&gt;%</span><br><span class="line">  head</span><br><span class="line"></span><br><span class="line">exam %&gt;%</span><br><span class="line">  mutate(total = math + english + science) %&gt;%</span><br><span class="line">  arrange(total) %&gt;%</span><br><span class="line">  head</span><br></pre></td></tr></table></figure><h3 id="실습-3"><a href="#실습-3" class="headerlink" title="실습"></a>실습</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">''</span><span class="string">' Q1. mpg데이터 복사본을 만들고, cty와 hwy를 더한 '</span>합산 연비 변수<span class="string">'를 추가하세요. '</span><span class="string">''</span></span><br><span class="line">mpg_new &lt;- as.data.frame(ggplot2::mpg)</span><br><span class="line">mpg_new &lt;- mpg_new %&gt;% </span><br><span class="line">            mutate(total = cty + hwy)</span><br><span class="line"></span><br><span class="line"><span class="string">''</span><span class="string">' Q2. 앞에서 만든 '</span>합산 연비 변수<span class="string">'를 2 로 나눠 '</span>평균 연비 변수<span class="string">'를 추가하세요. '</span><span class="string">''</span></span><br><span class="line">mpg_new &lt;- mpg_new %&gt;% </span><br><span class="line">            mutate(mean = total/<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"><span class="string">''</span><span class="string">' Q3. '</span>평균 연비 변수<span class="string">'가 가장 높은 자동차를 3 종의 데이터를 출력하세요. '</span><span class="string">''</span></span><br><span class="line">mpg_new %&gt;%  </span><br><span class="line">  arrange(desc(mean)) %&gt;% </span><br><span class="line">  head(<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line"><span class="string">''</span><span class="string">' </span></span><br><span class="line"><span class="string">Q4. 1~3번 문제를 해결할 수 있는 하나로 연결된 dplyr 구문을 만들어 출력하세요 </span></span><br><span class="line"><span class="string">데이터는 복사본 대신 mpg원본을 이용하세요.</span></span><br><span class="line"><span class="string">'</span><span class="string">''</span></span><br><span class="line">mpg %&gt;% </span><br><span class="line">  mutate(total = cty+hwy,</span><br><span class="line">         mean = total/<span class="number">2</span>) %&gt;% </span><br><span class="line">  arrange(desc(mean)) %&gt;% </span><br><span class="line">  head(<span class="number">3</span>)</span><br></pre></td></tr></table></figure><h2 id="집단별로-요약하기"><a href="#집단별로-요약하기" class="headerlink" title="집단별로 요약하기"></a>집단별로 요약하기</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">exam %&gt;% summarise(mean_math = mean(math))</span><br><span class="line"></span><br><span class="line">exam %&gt;%</span><br><span class="line">  group_by(class) %&gt;%</span><br><span class="line">  summarise(mean_math = mean(math))</span><br><span class="line"></span><br><span class="line">exam %&gt;%</span><br><span class="line">  group_by(class) %&gt;%</span><br><span class="line">  summarise(mean_math = mean(math),</span><br><span class="line">            sum_math = sum(math),</span><br><span class="line">            median_math = median(math),</span><br><span class="line">            n = n())</span><br></pre></td></tr></table></figure><ul><li>자주 사용하는 요약통계량 함수</li></ul><table><thead><tr><th align="center">함수</th><th align="center">의미</th></tr></thead><tbody><tr><td align="center">mean()</td><td align="center">평균</td></tr><tr><td align="center">sd()</td><td align="center">표준편차</td></tr><tr><td align="center">sum()</td><td align="center">합계</td></tr><tr><td align="center">median()</td><td align="center">중앙값</td></tr><tr><td align="center">min()</td><td align="center">최솟값</td></tr><tr><td align="center">max()</td><td align="center">최댓값</td></tr><tr><td align="center">n()</td><td align="center">빈도</td></tr></tbody></table><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mpg %&gt;%</span><br><span class="line">group_by(manufacturer, drv) %&gt;%</span><br><span class="line">summarise(mean_cty = mean(cty)) %&gt;%</span><br><span class="line">head(<span class="number">10</span>)</span><br></pre></td></tr></table></figure><ul><li>dplyr 조합하기<br>회사별로 “suv” 자동차의 도시 및 고속도로 통합 연비 평균을 구해 내림차순으로 정렬하고, 1~5위까지 출력하기</li></ul><table><thead><tr><th align="center">절차</th><th align="center">기능</th><th align="center">dplyr 함수</th></tr></thead><tbody><tr><td align="center">1</td><td align="center">회사별로 분리</td><td align="center">group_by()</td></tr><tr><td align="center">2</td><td align="center">suv 추출</td><td align="center">filter()</td></tr><tr><td align="center">3</td><td align="center">통합 연비 변수 생성</td><td align="center">mutate()</td></tr><tr><td align="center">4</td><td align="center">통합 연비 평균 산출</td><td align="center">summarise()</td></tr><tr><td align="center">5</td><td align="center">내림차순 정렬</td><td align="center">arrange()</td></tr><tr><td align="center">6</td><td align="center">1~5위까지 출력</td><td align="center">head()</td></tr></tbody></table><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">mpg &lt;- as.data.frame(ggplot2::mpg)</span><br><span class="line">mpg</span><br><span class="line"></span><br><span class="line">mpg %&gt;% </span><br><span class="line">  group_by(manufacturer) %&gt;% </span><br><span class="line">  filter(class == <span class="string">"suv"</span>) %&gt;% </span><br><span class="line">  mutate(total = cty+hwy) %&gt;% </span><br><span class="line">  summarise(mean = mean(total)) %&gt;% </span><br><span class="line">  arrange(desc(mean)) %&gt;% </span><br><span class="line">  head()</span><br></pre></td></tr></table></figure><h3 id="실습-4"><a href="#실습-4" class="headerlink" title="실습"></a>실습</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">''</span><span class="string">'</span></span><br><span class="line"><span class="string">Q1. mpg 데이터의 class는 "suv","compact"등 자동차를 특징에 따라 일곱 종류로 분류한 변수입니다. </span></span><br><span class="line"><span class="string">    어떤 차종의 연비가 높은지 비교해보려고 합니다. class별 cty평균을 구해보세요.</span></span><br><span class="line"><span class="string">'</span><span class="string">''</span></span><br><span class="line">mpg %&gt;% </span><br><span class="line">  group_by(class) %&gt;% </span><br><span class="line">  summarise(mean_cty = mean(cty))</span><br><span class="line"></span><br><span class="line"><span class="string">''</span><span class="string">'</span></span><br><span class="line"><span class="string">Q2. 앞 문제의 출력 결과는 class값 알파벳 순으로 정렬되어 있습니다. </span></span><br><span class="line"><span class="string">    어떤 차종의 도시 연비가 높은지 쉽게 알아볼 수 있도록 cty평균이 높은 순으로 정렬해 출력하세요.</span></span><br><span class="line"><span class="string">'</span><span class="string">''</span></span><br><span class="line">mpg %&gt;% </span><br><span class="line">  group_by(class) %&gt;% </span><br><span class="line">  summarise(mean_cty = mean(cty)) %&gt;% </span><br><span class="line">  arrange(desc(mean_cty))</span><br><span class="line"></span><br><span class="line"><span class="string">''</span><span class="string">'</span></span><br><span class="line"><span class="string">Q3. 어떤 회사 자동차의 hwy(고속도로 연비)가 가장 높은지 알아보려고 합니다. </span></span><br><span class="line"><span class="string">    hwy 평균이 가장 높은 회사 세 곳을 출력하세요.</span></span><br><span class="line"><span class="string">'</span><span class="string">''</span></span><br><span class="line">mpg %&gt;% </span><br><span class="line">  group_by(manufacturer) %&gt;% </span><br><span class="line">  summarise(mean_hwy = mean(hwy)) %&gt;% </span><br><span class="line">  arrange(desc(mean_hwy)) %&gt;% </span><br><span class="line">  head(<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line"><span class="string">''</span><span class="string">'</span></span><br><span class="line"><span class="string">Q4. 어떤 회사에서 "compact"(경차) 차종을 가장 많이 생산하는지 알아보려고 위해 </span></span><br><span class="line"><span class="string">    각 회사별 "compact" 차종 수를 내림차순으로 정렬해 출력하세요.</span></span><br><span class="line"><span class="string">'</span><span class="string">''</span></span><br><span class="line">mpg %&gt;% </span><br><span class="line">  filter(class == <span class="string">"compact"</span>) %&gt;% </span><br><span class="line">  group_by(manufacturer) %&gt;% </span><br><span class="line">  summarise(n = n()) %&gt;% </span><br><span class="line">  arrange(desc(n))</span><br></pre></td></tr></table></figure><h2 id="데이터-합치기"><a href="#데이터-합치기" class="headerlink" title="데이터 합치기"></a>데이터 합치기</h2><h3 id="가로로-합치기"><a href="#가로로-합치기" class="headerlink" title="가로로 합치기"></a>가로로 합치기</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">test1 &lt;- data.frame(id = c(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>),</span><br><span class="line">                    midterm = c(<span class="number">60</span>, <span class="number">80</span>, <span class="number">70</span>, <span class="number">90</span>, <span class="number">85</span>))</span><br><span class="line"></span><br><span class="line">test2 &lt;- data.frame(id = c(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>),</span><br><span class="line">                    final = c(<span class="number">70</span>, <span class="number">83</span>, <span class="number">65</span>, <span class="number">95</span>, <span class="number">80</span>))</span><br><span class="line"></span><br><span class="line">total &lt;- left_join(test1, test2, by = <span class="string">"id"</span>)</span><br><span class="line">total</span><br><span class="line"></span><br><span class="line">name &lt;- data.frame(class = c(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>),</span><br><span class="line">                   teacher = c(<span class="string">"kim"</span>, <span class="string">"lee"</span>, <span class="string">"park"</span>, <span class="string">"choi"</span>, <span class="string">"jung"</span>))</span><br><span class="line">name</span><br><span class="line"></span><br><span class="line">exam_new &lt;- left_join(exam, name, by = <span class="string">"class"</span>)</span><br><span class="line">exam_new</span><br></pre></td></tr></table></figure><h3 id="세로로-합치기"><a href="#세로로-합치기" class="headerlink" title="세로로 합치기"></a>세로로 합치기</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">group_a &lt;- data.frame(id = c(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>),</span><br><span class="line">                      test = c(<span class="number">60</span>, <span class="number">80</span>, <span class="number">70</span>, <span class="number">90</span>, <span class="number">85</span>))</span><br><span class="line">group_b &lt;- data.frame(id = c(<span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>),</span><br><span class="line">                      test = c(<span class="number">70</span>, <span class="number">83</span>, <span class="number">65</span>, <span class="number">95</span>, <span class="number">80</span>))</span><br><span class="line"></span><br><span class="line">group_all &lt;- bind_rows(group_a, group_b)</span><br><span class="line">group_all</span><br></pre></td></tr></table></figure><h3 id="실습-5"><a href="#실습-5" class="headerlink" title="실습"></a>실습</h3><ul><li>mpg 데이터의 fl변수는 자동차에 사용하는 연료(fuel)를 의미합니다. 아래는 자동차 연료별 가격을 나타낸 표입니다.</li></ul><table><thead><tr><th align="center">fl</th><th align="center">연료 종류</th><th align="center">가격(갤런당 USD)</th></tr></thead><tbody><tr><td align="center">c</td><td align="center">CNG</td><td align="center">2.35</td></tr><tr><td align="center">d</td><td align="center">diesel</td><td align="center">2.38</td></tr><tr><td align="center">e</td><td align="center">ethanol E85</td><td align="center">2.11</td></tr><tr><td align="center">p</td><td align="center">premium</td><td align="center">2.76</td></tr><tr><td align="center">r</td><td align="center">regular</td><td align="center">2.22</td></tr></tbody></table><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">fuel &lt;- data.frame(fl = c(<span class="string">"c"</span>, <span class="string">"d"</span>, <span class="string">"e"</span>, <span class="string">"p"</span>, <span class="string">"r"</span>),</span><br><span class="line">                   price_fl = c(<span class="number">2.35</span>, <span class="number">2.38</span>, <span class="number">2.11</span>, <span class="number">2.76</span>, <span class="number">2.22</span>),</span><br><span class="line">                   stringsAsFactors = <span class="literal">F</span>)</span><br><span class="line">fuel</span><br><span class="line">   </span><br><span class="line"><span class="string">''</span><span class="string">'</span></span><br><span class="line"><span class="string">Q1. mpg데이터에는 연료 종류를 나타낸 fl 변수는 있지만 연료 가격을 나타낸 변수는 없습니다.</span></span><br><span class="line"><span class="string">    위에서 만든 fuel 데이터를 이용해서 mpg데이터에 price_fl(연료 가격) 변수를 추가하세요.</span></span><br><span class="line"><span class="string">'</span><span class="string">''</span></span><br><span class="line">mpg &lt;- left_join(mpg, fuel, by=<span class="string">"fl"</span>)</span><br><span class="line">mpg</span><br><span class="line"></span><br><span class="line"><span class="string">''</span><span class="string">'</span></span><br><span class="line"><span class="string">Q2. 연료 가격 변수가 잘 추가됐는지 확인하기 위해서 </span></span><br><span class="line"><span class="string">    model, fl, price_fl 변수를 추출해 앞부분 5 행을 출력해 보세요.</span></span><br><span class="line"><span class="string">'</span><span class="string">''</span></span><br><span class="line">mpg %&gt;% </span><br><span class="line">  select(model, fl, price_fl) %&gt;% </span><br><span class="line">  head(<span class="number">5</span>)</span><br></pre></td></tr></table></figure><h2 id="정리하기"><a href="#정리하기" class="headerlink" title="정리하기"></a>정리하기</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">''</span><span class="string">' 1.조건에 맞는 데이터만 추출하기 '</span><span class="string">''</span></span><br><span class="line">exam %&gt;% filter(english &gt;= <span class="number">80</span>)</span><br><span class="line"></span><br><span class="line"><span class="string">''</span><span class="string">' 여러 조건 동시 충족 '</span><span class="string">''</span></span><br><span class="line">exam %&gt;% filter(class == <span class="number">1</span> &amp; math &gt;= <span class="number">50</span>)</span><br><span class="line"></span><br><span class="line"><span class="string">''</span><span class="string">' 여러 조건 중 하나 이상 충족 '</span><span class="string">''</span></span><br><span class="line">exam %&gt;% filter(math &gt;= <span class="number">90</span> | english &gt;= <span class="number">90</span>)</span><br><span class="line">exam %&gt;% filter(class %<span class="keyword">in</span>% c(<span class="number">1</span>,<span class="number">3</span>,<span class="number">5</span>))</span><br><span class="line"></span><br><span class="line"><span class="string">''</span><span class="string">' 2.필요한 변수만 추출하기 '</span><span class="string">''</span></span><br><span class="line">exam %&gt;% select(math)</span><br><span class="line">exam %&gt;% select(class, math, english)</span><br><span class="line"></span><br><span class="line"><span class="string">''</span><span class="string">' 3.함수 조합하기, 일부만 출력하기 '</span><span class="string">''</span></span><br><span class="line">exam %&gt;% </span><br><span class="line">  select(id, math) %&gt;% </span><br><span class="line">  head(<span class="number">10</span>)</span><br><span class="line"></span><br><span class="line"><span class="string">''</span><span class="string">' 4.순서대로 정렬하기 '</span><span class="string">''</span></span><br><span class="line">exam %&gt;% arrange(math)</span><br><span class="line">exam %&gt;% arrange(desc(math))</span><br><span class="line">exam %&gt;% arrange(class, math)</span><br><span class="line"></span><br><span class="line"><span class="string">''</span><span class="string">' 5.파생변수 추가하기 '</span><span class="string">''</span></span><br><span class="line">exam %&gt;% mutate(total = math, english, science)</span><br><span class="line"></span><br><span class="line"><span class="string">''</span><span class="string">' 여러 파생변수 한 번에 추가하기 '</span><span class="string">''</span></span><br><span class="line">exam %&gt;% </span><br><span class="line">  mutate(total = math + english + science,</span><br><span class="line">         mean = total/<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line"><span class="string">''</span><span class="string">' mutate()에 ifelse() 적용하기 '</span><span class="string">''</span></span><br><span class="line">exam %&gt;% mutate(test = ifelse(science &gt;= <span class="number">60</span>, <span class="string">"pass"</span>, <span class="string">"fail"</span>))</span><br><span class="line"></span><br><span class="line"><span class="string">''</span><span class="string">' 추가한 변수를 dplyr 코드에 바로 활용하기 '</span><span class="string">''</span></span><br><span class="line">exam %&gt;% </span><br><span class="line">  mutate(total = math + english + science) %&gt;% </span><br><span class="line">  arrange(total)</span><br><span class="line"></span><br><span class="line"><span class="string">''</span><span class="string">' 6.집단별로 요약하기 '</span><span class="string">''</span></span><br><span class="line">exam %&gt;% </span><br><span class="line">  group_by(class) %&gt;% </span><br><span class="line">  summarise(mean_math = mean(math))</span><br><span class="line"></span><br><span class="line"><span class="string">''</span><span class="string">' 각 집단별로 다시 집단 나누기 '</span><span class="string">''</span></span><br><span class="line">mpg %&gt;% </span><br><span class="line">  group_by(manufacturer, drv) %&gt;% </span><br><span class="line">  summarise(mean_cty = mean(cty))</span><br><span class="line"></span><br><span class="line"><span class="string">''</span><span class="string">' 7.데이터 합치기 '</span><span class="string">''</span></span><br><span class="line"><span class="string">''</span><span class="string">' 가로로 합치기 '</span><span class="string">''</span></span><br><span class="line">total &lt;- left_join(test1, test2, by = <span class="string">"id"</span>)</span><br><span class="line"></span><br><span class="line"><span class="string">''</span><span class="string">' 세로로 합치기 '</span><span class="string">''</span></span><br><span class="line">group_all &lt;- bind_rows(group_a, group_b)</span><br></pre></td></tr></table></figure><h3 id="실습-6"><a href="#실습-6" class="headerlink" title="실습"></a>실습</h3><ul><li>미국 동북중부 437개 지역의 인구통계 정보를 담고 있는 midwest 데이터를 사용해 데이터 분석 문제를 해결해 보세요. midwest는 ggplot2패키지에 들어 있습니다.</li></ul><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">''</span><span class="string">'</span></span><br><span class="line"><span class="string">문제1. popadults는 해당 지역의 성인 인구, poptotal은 전체 인구를 나타냅니다. </span></span><br><span class="line"><span class="string">      midwest데이터에 '</span>전체 인구 대비 미성년 인구 백분율<span class="string">' 변수를 추가하세요.</span></span><br><span class="line"><span class="string">'</span><span class="string">''</span></span><br><span class="line">midwest &lt;- as.data.frame(ggplot2::midwest)</span><br><span class="line">midwest</span><br><span class="line"></span><br><span class="line">midwest %&gt;% </span><br><span class="line">  select(popadults, poptotal)</span><br><span class="line"></span><br><span class="line">midwest &lt;- midwest %&gt;% </span><br><span class="line">              mutate(percchild = ((poptotal-popadults)/poptotal)*<span class="number">100</span>)</span><br><span class="line"></span><br><span class="line"><span class="string">''</span><span class="string">' 문제2. 미성년 인구 백분율이 가장 높은 상위 5개 county(지역)의 미성년 인구 백분율을 출력하세요. '</span><span class="string">''</span></span><br><span class="line">midwest %&gt;%</span><br><span class="line">  select(county, percchild) %&gt;% </span><br><span class="line">  arrange(desc(percchild)) %&gt;% </span><br><span class="line">  head(<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line"><span class="string">''</span><span class="string">'</span></span><br><span class="line"><span class="string">  문제3. 분류표의 기준에 따라 미성년 비율 등급 변수를 추가하고, 각 등급에 몇 개의 지역이 있는지 알아보세요.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  | 분류 | 기준 | </span></span><br><span class="line"><span class="string">  </span></span><br><span class="line"><span class="string">  | large | 40% 이상 |</span></span><br><span class="line"><span class="string">  | middle | 30% ~ 40% 미만 |</span></span><br><span class="line"><span class="string">  | small | 30% 미만 |</span></span><br><span class="line"><span class="string">'</span><span class="string">''</span></span><br><span class="line">midwest &lt;- midwest %&gt;% </span><br><span class="line">            mutate(gradechild = ifelse(percchild &gt;= <span class="number">40</span>, <span class="string">"large"</span>,</span><br><span class="line">                                       ifelse(percchild &gt;=<span class="number">30</span>, <span class="string">"middle"</span>, <span class="string">"small"</span>)))</span><br><span class="line">table(midwest$gradechild)</span><br><span class="line"></span><br><span class="line"><span class="string">''</span><span class="string">'</span></span><br><span class="line"><span class="string">문제4. popasian은 해당 지역의 아시아인 인구를 나타냅니다. </span></span><br><span class="line"><span class="string">  "전체 인구 대비 아시아인 백분율" 변수를 만들고 </span></span><br><span class="line"><span class="string">  state, county, 아시아인 백분율을 출력하세요.</span></span><br><span class="line"><span class="string">'</span><span class="string">''</span></span><br><span class="line"></span><br><span class="line">midwest &lt;- midwest %&gt;% </span><br><span class="line">  mutate(percasian = (popasian/poptotal)*<span class="number">100</span>) %&gt;% </span><br><span class="line">  select(state, county, percasian)</span><br><span class="line">  </span><br><span class="line">midwest</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>http://everydayspring.github.io/2020/07/17/R-2020-07-17-data/#disqus_thread</comments>
    </item>
    
    <item>
      <title>R 데이터 분석 기초</title>
      <link>http://everydayspring.github.io/2020/07/15/R-2020-07-15-data/</link>
      <guid>http://everydayspring.github.io/2020/07/15/R-2020-07-15-data/</guid>
      <pubDate>Wed, 15 Jul 2020 06:46:33 GMT</pubDate>
      <description>
      
        데이터 파악하기
 * head() : 데이터 앞부분 출력
 * tail() : 데이터 뒷부분 출력
 * View() : 뷰어 창에서 데이터 확인
 * dim() : 데이터 차원 출력 (Dimension)
 * str() : 데이터 속성 출력 (Structure)
 * summary() : 요약통계량 출력

1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
      
      </description>
      
      
      <content:encoded><![CDATA[<h2 id="데이터-파악하기"><a href="#데이터-파악하기" class="headerlink" title="데이터 파악하기"></a>데이터 파악하기</h2><ul><li>head()    : 데이터 앞부분 출력</li><li>tail()    : 데이터 뒷부분 출력</li><li>View()    : 뷰어 창에서 데이터 확인</li><li>dim()     : 데이터 차원 출력 (Dimension)</li><li>str()     : 데이터 속성 출력 (Structure)</li><li>summary() : 요약통계량 출력</li></ul><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line">exam &lt;- read.csv(<span class="string">"csv_exam.csv"</span>)</span><br><span class="line">head(exam)</span><br><span class="line"><span class="comment">##   id class math english science</span></span><br><span class="line"><span class="comment">## 1  1     1   50      98      50</span></span><br><span class="line"><span class="comment">## 2  2     1   60      97      60</span></span><br><span class="line"><span class="comment">## 3  3     1   45      86      78</span></span><br><span class="line"><span class="comment">## 4  4     1   30      98      58</span></span><br><span class="line"><span class="comment">## 5  5     2   25      80      65</span></span><br><span class="line"><span class="comment">## 6  6     2   50      89      98</span></span><br><span class="line"></span><br><span class="line">head(exam, <span class="number">10</span>)</span><br><span class="line"><span class="comment">##    id class math english science</span></span><br><span class="line"><span class="comment">## 1   1     1   50      98      50</span></span><br><span class="line"><span class="comment">## 2   2     1   60      97      60</span></span><br><span class="line"><span class="comment">## 3   3     1   45      86      78</span></span><br><span class="line"><span class="comment">## 4   4     1   30      98      58</span></span><br><span class="line"><span class="comment">## 5   5     2   25      80      65</span></span><br><span class="line"><span class="comment">## 6   6     2   50      89      98</span></span><br><span class="line"><span class="comment">## 7   7     2   80      90      45</span></span><br><span class="line"><span class="comment">## 8   8     2   90      78      25</span></span><br><span class="line"><span class="comment">## 9   9     3   20      98      15</span></span><br><span class="line"><span class="comment">## 10 10     3   50      98      45</span></span><br><span class="line"></span><br><span class="line">tail(exam)</span><br><span class="line"><span class="comment">##    id class math english science</span></span><br><span class="line"><span class="comment">## 15 15     4   75      56      78</span></span><br><span class="line"><span class="comment">## 16 16     4   58      98      65</span></span><br><span class="line"><span class="comment">## 17 17     5   65      68      98</span></span><br><span class="line"><span class="comment">## 18 18     5   80      78      90</span></span><br><span class="line"><span class="comment">## 19 19     5   89      68      87</span></span><br><span class="line"><span class="comment">## 20 20     5   78      83      58</span></span><br><span class="line"></span><br><span class="line">tail(exam, <span class="number">10</span>)</span><br><span class="line"><span class="comment">##    id class math english science</span></span><br><span class="line"><span class="comment">## 11 11     3   65      65      65</span></span><br><span class="line"><span class="comment">## 12 12     3   45      85      32</span></span><br><span class="line"><span class="comment">## 13 13     4   46      98      65</span></span><br><span class="line"><span class="comment">## 14 14     4   48      87      12</span></span><br><span class="line"><span class="comment">## 15 15     4   75      56      78</span></span><br><span class="line"><span class="comment">## 16 16     4   58      98      65</span></span><br><span class="line"><span class="comment">## 17 17     5   65      68      98</span></span><br><span class="line"><span class="comment">## 18 18     5   80      78      90</span></span><br><span class="line"><span class="comment">## 19 19     5   89      68      87</span></span><br><span class="line"><span class="comment">## 20 20     5   78      83      58</span></span><br><span class="line"></span><br><span class="line">View(exam)</span><br><span class="line"></span><br><span class="line">dim(exam)</span><br><span class="line"><span class="comment">## [1] 20  5</span></span><br><span class="line"></span><br><span class="line">str(exam)</span><br><span class="line"><span class="comment">## 'data.frame':20 obs. of  5 variables:</span></span><br><span class="line"><span class="comment">##  $ id     : int  1 2 3 4 5 6 7 8 9 10 ...</span></span><br><span class="line"><span class="comment">##  $ class  : int  1 1 1 1 2 2 2 2 3 3 ...</span></span><br><span class="line"><span class="comment">##  $ math   : int  50 60 45 30 25 50 80 90 20 50 ...</span></span><br><span class="line"><span class="comment">##  $ english: int  98 97 86 98 80 89 90 78 98 98 ...</span></span><br><span class="line"><span class="comment">##  $ science: int  50 60 78 58 65 98 45 25 15 45 ...</span></span><br><span class="line"></span><br><span class="line">summary(exam)</span><br><span class="line"><span class="comment">##        id            class        math          english        science     </span></span><br><span class="line"><span class="comment">##  Min.   : 1.00   Min.   :1   Min.   :20.00   Min.   :56.0   Min.   :12.00  </span></span><br><span class="line"><span class="comment">##  1st Qu.: 5.75   1st Qu.:2   1st Qu.:45.75   1st Qu.:78.0   1st Qu.:45.00  </span></span><br><span class="line"><span class="comment">##  Median :10.50   Median :3   Median :54.00   Median :86.5   Median :62.50  </span></span><br><span class="line"><span class="comment">##  Mean   :10.50   Mean   :3   Mean   :57.45   Mean   :84.9   Mean   :59.45  </span></span><br><span class="line"><span class="comment">##  3rd Qu.:15.25   3rd Qu.:4   3rd Qu.:75.75   3rd Qu.:98.0   3rd Qu.:78.00  </span></span><br><span class="line"><span class="comment">##  Max.   :20.00   Max.   :5   Max.   :90.00   Max.   :98.0   Max.   :98.00</span></span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">mpg &lt;- as.data.frame(ggplot2::mpg)</span><br><span class="line">head(mpg)</span><br><span class="line"><span class="comment">##   manufacturer model displ year cyl      trans drv cty hwy fl   class</span></span><br><span class="line"><span class="comment">## 1         audi    a4   1.8 1999   4   auto(l5)   f  18  29  p compact</span></span><br><span class="line"><span class="comment">## 2         audi    a4   1.8 1999   4 manual(m5)   f  21  29  p compact</span></span><br><span class="line"><span class="comment">## 3         audi    a4   2.0 2008   4 manual(m6)   f  20  31  p compact</span></span><br><span class="line"><span class="comment">## 4         audi    a4   2.0 2008   4   auto(av)   f  21  30  p compact</span></span><br><span class="line"><span class="comment">## 5         audi    a4   2.8 1999   6   auto(l5)   f  16  26  p compact</span></span><br><span class="line"><span class="comment">## 6         audi    a4   2.8 1999   6 manual(m5)   f  18  26  p compact</span></span><br><span class="line"></span><br><span class="line">tail(mpg)</span><br><span class="line"><span class="comment">##     manufacturer  model displ year cyl      trans drv cty hwy fl   class</span></span><br><span class="line"><span class="comment">## 229   volkswagen passat   1.8 1999   4   auto(l5)   f  18  29  p midsize</span></span><br><span class="line"><span class="comment">## 230   volkswagen passat   2.0 2008   4   auto(s6)   f  19  28  p midsize</span></span><br><span class="line"><span class="comment">## 231   volkswagen passat   2.0 2008   4 manual(m6)   f  21  29  p midsize</span></span><br><span class="line"><span class="comment">## 232   volkswagen passat   2.8 1999   6   auto(l5)   f  16  26  p midsize</span></span><br><span class="line"><span class="comment">## 233   volkswagen passat   2.8 1999   6 manual(m5)   f  18  26  p midsize</span></span><br><span class="line"><span class="comment">## 234   volkswagen passat   3.6 2008   6   auto(s6)   f  17  26  p midsize</span></span><br><span class="line"></span><br><span class="line">View(mpg)</span><br><span class="line"></span><br><span class="line">dim(mpg)</span><br><span class="line"><span class="comment">## [1] 234  11</span></span><br><span class="line"></span><br><span class="line">str(mpg)</span><br><span class="line"><span class="comment">## 'data.frame':234 obs. of  11 variables:</span></span><br><span class="line"><span class="comment">##  $ manufacturer: chr  "audi" "audi" "audi" "audi" ...</span></span><br><span class="line"><span class="comment">##  $ model       : chr  "a4" "a4" "a4" "a4" ...</span></span><br><span class="line"><span class="comment">##  $ displ       : num  1.8 1.8 2 2 2.8 2.8 3.1 1.8 1.8 2 ...</span></span><br><span class="line"><span class="comment">##  $ year        : int  1999 1999 2008 2008 1999 1999 2008 1999 1999 2008 ...</span></span><br><span class="line"><span class="comment">##  $ cyl         : int  4 4 4 4 6 6 6 4 4 4 ...</span></span><br><span class="line"><span class="comment">##  $ trans       : chr  "auto(l5)" "manual(m5)" "manual(m6)" "auto(av)" ...</span></span><br><span class="line"><span class="comment">##  $ drv         : chr  "f" "f" "f" "f" ...</span></span><br><span class="line"><span class="comment">##  $ cty         : int  18 21 20 21 16 18 18 18 16 20 ...</span></span><br><span class="line"><span class="comment">##  $ hwy         : int  29 29 31 30 26 26 27 26 25 28 ...</span></span><br><span class="line"><span class="comment">##  $ fl          : chr  "p" "p" "p" "p" ...</span></span><br><span class="line"><span class="comment">##  $ class       : chr  "compact" "compact" "compact" "compact" ...</span></span><br><span class="line"></span><br><span class="line">summary(mpg)</span><br><span class="line"><span class="comment">##  manufacturer          model               displ            year     </span></span><br><span class="line"><span class="comment">##  Length:234         Length:234         Min.   :1.600   Min.   :1999  </span></span><br><span class="line"><span class="comment">##  Class :character   Class :character   1st Qu.:2.400   1st Qu.:1999  </span></span><br><span class="line"><span class="comment">##  Mode  :character   Mode  :character   Median :3.300   Median :2004  </span></span><br><span class="line"><span class="comment">##                                        Mean   :3.472   Mean   :2004  </span></span><br><span class="line"><span class="comment">##                                        3rd Qu.:4.600   3rd Qu.:2008  </span></span><br><span class="line"><span class="comment">##                                        Max.   :7.000   Max.   :2008  </span></span><br><span class="line"><span class="comment">##       cyl           trans               drv                 cty       </span></span><br><span class="line"><span class="comment">##  Min.   :4.000   Length:234         Length:234         Min.   : 9.00  </span></span><br><span class="line"><span class="comment">##  1st Qu.:4.000   Class :character   Class :character   1st Qu.:14.00  </span></span><br><span class="line"><span class="comment">##  Median :6.000   Mode  :character   Mode  :character   Median :17.00  </span></span><br><span class="line"><span class="comment">##  Mean   :5.889                                         Mean   :16.86  </span></span><br><span class="line"><span class="comment">##  3rd Qu.:8.000                                         3rd Qu.:19.00  </span></span><br><span class="line"><span class="comment">##  Max.   :8.000                                         Max.   :35.00  </span></span><br><span class="line"><span class="comment">##       hwy             fl               class          </span></span><br><span class="line"><span class="comment">##  Min.   :12.00   Length:234         Length:234        </span></span><br><span class="line"><span class="comment">##  1st Qu.:18.00   Class :character   Class :character  </span></span><br><span class="line"><span class="comment">##  Median :24.00   Mode  :character   Mode  :character  </span></span><br><span class="line"><span class="comment">##  Mean   :23.44                                        </span></span><br><span class="line"><span class="comment">##  3rd Qu.:27.00                                        </span></span><br><span class="line"><span class="comment">##  Max.   :44.00</span></span><br></pre></td></tr></table></figure><h2 id="데이터-수정하기"><a href="#데이터-수정하기" class="headerlink" title="데이터 수정하기"></a>데이터 수정하기</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">install.packages(<span class="string">"dplyr"</span>)</span><br><span class="line"><span class="keyword">library</span>(dplyr)</span><br><span class="line"></span><br><span class="line">?dplyr</span><br><span class="line"></span><br><span class="line">df_raw &lt;- data.frame(var1 = c(<span class="number">1</span>, <span class="number">2</span>, <span class="number">1</span>),</span><br><span class="line">                     var2 = c(<span class="number">2</span>, <span class="number">3</span>, <span class="number">3</span>))</span><br><span class="line">df_raw</span><br><span class="line"><span class="comment">##   var1 var2</span></span><br><span class="line"><span class="comment">## 1    1    2</span></span><br><span class="line"><span class="comment">## 2    2    3</span></span><br><span class="line"><span class="comment">## 3    1    3</span></span><br><span class="line"></span><br><span class="line">df_new &lt;- df_raw</span><br><span class="line">df_new</span><br><span class="line"><span class="comment">##   var1 var2</span></span><br><span class="line"><span class="comment">## 1    1    2</span></span><br><span class="line"><span class="comment">## 2    2    3</span></span><br><span class="line"><span class="comment">## 3    1    3</span></span><br><span class="line"></span><br><span class="line">df_new &lt;- rename(df_new, v2 = var2)   <span class="comment"># dplyr 함수, '새 변수명 = 기존 변수명'</span></span><br><span class="line">df_new</span><br><span class="line"><span class="comment">##   var1 v2</span></span><br><span class="line"><span class="comment">## 1    1  2</span></span><br><span class="line"><span class="comment">## 2    2  3</span></span><br><span class="line"><span class="comment">## 3    1  3</span></span><br></pre></td></tr></table></figure><h3 id="실습"><a href="#실습" class="headerlink" title="실습"></a>실습</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">''</span><span class="string">'</span></span><br><span class="line"><span class="string">Q1. ggplot2 패키지의 mpg 데이터를 사용할 수 있도록 불러온 뒤 복사본을 만드세요.</span></span><br><span class="line"><span class="string">'</span><span class="string">''</span></span><br><span class="line">mpg &lt;- as.data.frame(ggplot2::mpg)</span><br><span class="line">mpg_new &lt;- mpg</span><br><span class="line"></span><br><span class="line"><span class="string">''</span><span class="string">'</span></span><br><span class="line"><span class="string">Q2. 복사본 데이터를 이용해서 cty는 city로, hwy는 highway로 변수명을 수정하세요.</span></span><br><span class="line"><span class="string">'</span><span class="string">''</span></span><br><span class="line">mpg_new &lt;- rename(mpg_new, city = cty, highway = hwy)</span><br><span class="line"></span><br><span class="line"><span class="string">''</span><span class="string">'</span></span><br><span class="line"><span class="string">Q3. 데이터 일부를 출력해서 변수명이 바뀌었는지 확인해 보세요.</span></span><br><span class="line"><span class="string">'</span><span class="string">''</span></span><br><span class="line">head(mpg_new)</span><br></pre></td></tr></table></figure><h2 id="데이터에-새로운-변수-만들기"><a href="#데이터에-새로운-변수-만들기" class="headerlink" title="데이터에 새로운 변수 만들기"></a>데이터에 새로운 변수 만들기</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">df &lt;- data.frame(var1 = c(<span class="number">4</span>, <span class="number">3</span>, <span class="number">8</span>),</span><br><span class="line">                 var2 = c(<span class="number">2</span>, <span class="number">6</span>, <span class="number">1</span>))</span><br><span class="line">df</span><br><span class="line"><span class="comment">##   var1 var2</span></span><br><span class="line"><span class="comment">## 1    4    2</span></span><br><span class="line"><span class="comment">## 2    3    6</span></span><br><span class="line"><span class="comment">## 3    8    1</span></span><br><span class="line"></span><br><span class="line">df$var_sum &lt;- df$var1 + df$var2</span><br><span class="line">df</span><br><span class="line"><span class="comment">##   var1 var2 var_sum</span></span><br><span class="line"><span class="comment">## 1    4    2       6</span></span><br><span class="line"><span class="comment">## 2    3    6       9</span></span><br><span class="line"><span class="comment">## 3    8    1       9</span></span><br><span class="line"></span><br><span class="line">df$var_mean &lt;- (df$var1 + df$var2)/<span class="number">2</span></span><br><span class="line">df</span><br><span class="line"><span class="comment">##   var1 var2 var_sum var_mean</span></span><br><span class="line"><span class="comment">## 1    4    2       6      3.0</span></span><br><span class="line"><span class="comment">## 2    3    6       9      4.5</span></span><br><span class="line"><span class="comment">## 3    8    1       9      4.5</span></span><br><span class="line"></span><br><span class="line"><span class="string">''</span><span class="string">' 각 차량의 연비의 평균 구하기 '</span><span class="string">''</span></span><br><span class="line">mpg$total &lt;- (mpg$cty + mpg$hwy) / <span class="number">2</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="string">''</span><span class="string">' 연비의 총 평균 구하기 '</span><span class="string">''</span></span><br><span class="line">mean(mpg$total)</span><br><span class="line"><span class="comment">## [1] 20.14957</span></span><br><span class="line"></span><br><span class="line">summary(mpg$total)</span><br><span class="line"><span class="comment">##   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. </span></span><br><span class="line"><span class="comment">##  10.50   15.50   20.50   20.15   23.50   39.50 </span></span><br><span class="line">hist(mpg$total)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="string">''</span><span class="string">' 연비에 따른 합겹 불합격 구분 '</span><span class="string">''</span></span><br><span class="line">mpg$test &lt;- ifelse(mpg$total &gt;= <span class="number">20</span>, <span class="string">"pass"</span>, <span class="string">"fail"</span>)</span><br><span class="line">head(mpg, <span class="number">10</span>)</span><br><span class="line">head(mpg$test,<span class="number">20</span>)</span><br><span class="line"><span class="comment">##  [1] "pass" "pass" "pass" "pass" "pass" "pass" "pass" "pass" "pass" "pass" "pass"</span></span><br><span class="line"><span class="comment">## [12] "pass" "pass" "pass" "pass" "fail" "pass" "fail" "fail" "fail"</span></span><br><span class="line"></span><br><span class="line"><span class="string">''</span><span class="string">' 합격, 불합격 갯수 '</span><span class="string">''</span></span><br><span class="line">qplot(mpg$test)</span><br><span class="line">table(mpg$test)</span><br><span class="line"><span class="comment">## fail pass </span></span><br><span class="line"><span class="comment">##  106  128 </span></span><br><span class="line"></span><br><span class="line">mpg$grade &lt;- ifelse(mpg$total &gt;= <span class="number">30</span>, <span class="string">"A"</span>,</span><br><span class="line">                    ifelse(mpg$total &gt;= <span class="number">20</span>, <span class="string">"B"</span>, <span class="string">"c"</span>))</span><br><span class="line">head(mpg, <span class="number">20</span>)</span><br><span class="line">table(mpg$grade)</span><br><span class="line"><span class="comment">##   A   B   c </span></span><br><span class="line"><span class="comment">##  10 118 106 </span></span><br><span class="line">qplot(mpg$grade)</span><br><span class="line"></span><br><span class="line">mpg$grade2 &lt;- ifelse(mpg$total &gt;= <span class="number">30</span>, <span class="string">"A"</span>,</span><br><span class="line">                    ifelse(mpg$total &gt;= <span class="number">25</span>, <span class="string">"B"</span>,</span><br><span class="line">                           ifelse(mpg$total &gt;= <span class="number">20</span>, <span class="string">"C"</span>, <span class="string">"D"</span>)))</span><br></pre></td></tr></table></figure><h3 id="실습-1"><a href="#실습-1" class="headerlink" title="실습"></a>실습</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">''</span><span class="string">'</span></span><br><span class="line"><span class="string">ggplot2 패키지에는 미국 동북중부 437개 지역의 인구통계 정보를 담은 midwest라는 데이터가 포함되어 있습니다. </span></span><br><span class="line"><span class="string">midwest 데이터를 사용해 데이터 분석 문제를 해결해보세요.</span></span><br><span class="line"><span class="string">'</span><span class="string">''</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="string">''</span><span class="string">' Q1.ggplot2의 midwest 데이터를 데이터 프레임 형태로 불러와서 데이터의 특성을 파악하세요. '</span><span class="string">''</span></span><br><span class="line">midwest &lt;- as.data.frame(ggplot2::midwest)</span><br><span class="line">midwest</span><br><span class="line">head(midwest,<span class="number">5</span>)</span><br><span class="line">tail(midwest,<span class="number">5</span>)</span><br><span class="line">View(midwest)</span><br><span class="line">dim(midwest)</span><br><span class="line">str(midwest)</span><br><span class="line">summary(midwest)</span><br><span class="line"></span><br><span class="line"><span class="string">''</span><span class="string">' Q2.poptotal(전체 인구)을 total로, popasian(아시아 인구)을 asian으로 변수명을 수정하세요. '</span><span class="string">''</span></span><br><span class="line">midwest &lt;- rename(midwest, total = poptotal, asian = popasian)</span><br><span class="line">head(midwest, <span class="number">5</span>)</span><br><span class="line"></span><br><span class="line"><span class="string">''</span><span class="string">' Q3.total, asian 변수를 이용해 '</span>전체 인구 대비 아시아 인구 백분율<span class="string">'파생변수를 만들고, 히스토그램을 만들어 도시들이 어떻게 분포하는지 살펴보세요. '</span><span class="string">''</span></span><br><span class="line">midwest$percasian &lt;- (midwest$asian / midwest$total)*<span class="number">100</span></span><br><span class="line">head(midwest, <span class="number">5</span>)</span><br><span class="line">hist(midwest$percasian)</span><br><span class="line"></span><br><span class="line"><span class="string">''</span><span class="string">' Q4.아시아 인구 백분율 전체 평균을 구하고, 평균을 초과하면 "large", 그 외에는 "small"을 부여하는 파생변수를 만들어 보세요. '</span><span class="string">''</span></span><br><span class="line">mean(midwest$percasian)</span><br><span class="line">midwest$percasiantotal &lt;- ifelse(midwest$percasian &gt; mean(midwest$percasian), <span class="string">"large"</span>, <span class="string">"small"</span>)</span><br><span class="line">head(midwest, <span class="number">10</span>)</span><br><span class="line"></span><br><span class="line"><span class="string">''</span><span class="string">' Q5."large"와 "small"에 해당하는 지역이 얼마나 되는지, 진도표와 빈도막대그래프로 만들어서 확인해보세요. '</span><span class="string">''</span></span><br><span class="line">table(midwest$percasiantotal)</span><br><span class="line">qplot(midwest$percasiantotal)</span><br></pre></td></tr></table></figure><h2 id="정리하기"><a href="#정리하기" class="headerlink" title="정리하기"></a>정리하기</h2><h3 id="1-데이터-준비-패키지-준비"><a href="#1-데이터-준비-패키지-준비" class="headerlink" title="1.데이터 준비, 패키지 준비"></a>1.데이터 준비, 패키지 준비</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mpg &lt;- as.data.frame(ggplot2::mpg)  <span class="comment"># 데이터 불러오기</span></span><br><span class="line"><span class="keyword">library</span>(dplyr)                      <span class="comment"># dplyr 로드</span></span><br><span class="line"><span class="keyword">library</span>(ggplot2)                    <span class="comment"># ggplot2 로드</span></span><br></pre></td></tr></table></figure><h3 id="2-데이터-파악"><a href="#2-데이터-파악" class="headerlink" title="2.데이터 파악"></a>2.데이터 파악</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">head(mpg)     <span class="comment"># Raw 데이터 앞부분</span></span><br><span class="line">tail(mpg)     <span class="comment"># Raw 데이터 뒷부분</span></span><br><span class="line">View(mpg)     <span class="comment"># Raw 데이터 뷰어창에서 확인</span></span><br><span class="line">dim(mpg)      <span class="comment"># 차원</span></span><br><span class="line">str(mpg)      <span class="comment"># 속성</span></span><br><span class="line">summary(mpg)  <span class="comment"># 요약 통계량</span></span><br></pre></td></tr></table></figure><h3 id="3-변수명-수정"><a href="#3-변수명-수정" class="headerlink" title="3.변수명 수정"></a>3.변수명 수정</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mpg &lt;- rename(mpg, company = manufacturer)</span><br></pre></td></tr></table></figure><h3 id="4-파생변수-생성"><a href="#4-파생변수-생성" class="headerlink" title="4.파생변수 생성"></a>4.파생변수 생성</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mpg$total &lt;- (mpg$cty + mpg$hwy)/<span class="number">2</span>                    <span class="comment"># 변수 조합</span></span><br><span class="line">mpg$test &lt;- ifelse(mpg$total &gt;= <span class="number">20</span>, <span class="string">"pass"</span>, <span class="string">"fail"</span>)   <span class="comment"># 조건문 활용</span></span><br></pre></td></tr></table></figure><h3 id="5-빈도-확인"><a href="#5-빈도-확인" class="headerlink" title="5.빈도 확인"></a>5.빈도 확인</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">table(mpg$test)   <span class="comment"># 빈도표 출력</span></span><br><span class="line">qplot(mpg$test)   <span class="comment"># 막대 그래프 활용</span></span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>http://everydayspring.github.io/2020/07/15/R-2020-07-15-data/#disqus_thread</comments>
    </item>
    
    <item>
      <title>R 데이터 프레임</title>
      <link>http://everydayspring.github.io/2020/07/14/R-2020-07-14-Data-Frame/</link>
      <guid>http://everydayspring.github.io/2020/07/14/R-2020-07-14-Data-Frame/</guid>
      <pubDate>Tue, 14 Jul 2020 13:12:40 GMT</pubDate>
      <description>
      
        데이터 프레임 이해하기
이름영어 점수수학 점수김지훈9050이유진8060박동현60100김민지7020‘열’ 속성 / ‘행’ 한 사람의 정보

1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27


english &lt;- c(90, 80, 60, 70)
english
## [1] 90 80 60 70

math &lt;- c(50, 60, 100, 20)
math
## [1] 50 60 100 20

class &lt;- c(1, 1, 2, 2)
class
## [1] 1 1
      
      </description>
      
      
      <content:encoded><![CDATA[<h2 id="데이터-프레임-이해하기"><a href="#데이터-프레임-이해하기" class="headerlink" title="데이터 프레임 이해하기"></a>데이터 프레임 이해하기</h2><table><thead><tr><th align="center"><strong>이름</strong></th><th align="center"><strong>영어 점수</strong></th><th align="center"><strong>수학 점수</strong></th></tr></thead><tbody><tr><td align="center">김지훈</td><td align="center">90</td><td align="center">50</td></tr><tr><td align="center">이유진</td><td align="center">80</td><td align="center">60</td></tr><tr><td align="center">박동현</td><td align="center">60</td><td align="center">100</td></tr><tr><td align="center">김민지</td><td align="center">70</td><td align="center">20</td></tr></tbody></table><p>‘열’ 속성 / ‘행’ 한 사람의 정보</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">english &lt;- c(<span class="number">90</span>, <span class="number">80</span>, <span class="number">60</span>, <span class="number">70</span>)</span><br><span class="line">english</span><br><span class="line"><span class="comment">## [1] 90 80 60 70</span></span><br><span class="line"></span><br><span class="line">math &lt;- c(<span class="number">50</span>, <span class="number">60</span>, <span class="number">100</span>, <span class="number">20</span>)</span><br><span class="line">math</span><br><span class="line"><span class="comment">## [1] 50 60 100 20</span></span><br><span class="line"></span><br><span class="line">class &lt;- c(<span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">2</span>)</span><br><span class="line">class</span><br><span class="line"><span class="comment">## [1] 1 1 2 2</span></span><br><span class="line"></span><br><span class="line">df_midterm &lt;- data.frame(english, math, class)</span><br><span class="line">df_midterm</span><br><span class="line"><span class="comment">##   english math class</span></span><br><span class="line"><span class="comment">## 1      90   50     1</span></span><br><span class="line"><span class="comment">## 2      80   60     1</span></span><br><span class="line"><span class="comment">## 3      60  100     2</span></span><br><span class="line"><span class="comment">## 4      70   20     2</span></span><br><span class="line"></span><br><span class="line">mean(df_midterm$english)</span><br><span class="line">mean(df_midterm$math)</span><br><span class="line"></span><br><span class="line">df_midterm &lt;- data.frame(english = c(<span class="number">90</span>, <span class="number">80</span>, <span class="number">60</span>, <span class="number">70</span>),</span><br><span class="line">                         math = c(<span class="number">50</span>, <span class="number">60</span>, <span class="number">100</span>, <span class="number">20</span>),</span><br><span class="line">                         class = c(<span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">2</span>))</span><br><span class="line">df_midterm</span><br></pre></td></tr></table></figure><h2 id="외부-데이터-가져오기"><a href="#외부-데이터-가져오기" class="headerlink" title="외부 데이터 가져오기"></a>외부 데이터 가져오기</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">install.packages(<span class="string">"readxl"</span>)</span><br><span class="line"><span class="keyword">library</span>(readxl)</span><br><span class="line"></span><br><span class="line">getwd()     <span class="comment"># 웨킹 디렉토리 확인</span></span><br><span class="line"></span><br><span class="line">df_exam &lt;- read_excel(<span class="string">"excel_exam.xlsx"</span>)</span><br><span class="line">df_exam</span><br><span class="line"></span><br><span class="line">mean(df_exam$english)</span><br><span class="line">mean(df_exam$science)</span><br><span class="line"></span><br><span class="line">df_exam_novar &lt;- read_excel(<span class="string">"excel_exam_novar.xlsx"</span>, col_names = <span class="literal">F</span>)</span><br><span class="line">df_exam_novar</span><br><span class="line"></span><br><span class="line">df_exam_sheet &lt;- read_excel(<span class="string">"excel_exam_sheet.xlsx"</span>, sheet = <span class="number">3</span>)</span><br><span class="line">df_exam_sheet</span><br><span class="line"></span><br><span class="line">df_csv_exam &lt;- read.csv(<span class="string">"csv_exam.csv"</span>)</span><br><span class="line">df_csv_exam &lt;- read.csv(<span class="string">"csv_exam.csv"</span>, stringsAsFactors = <span class="literal">F</span>)</span><br><span class="line">df_csv_exam</span><br></pre></td></tr></table></figure><h2 id="데이터-내보내기"><a href="#데이터-내보내기" class="headerlink" title="데이터 내보내기"></a>데이터 내보내기</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">df_midterm &lt;- data.frame(english = c(<span class="number">90</span>, <span class="number">80</span>, <span class="number">60</span>, <span class="number">70</span>),</span><br><span class="line">                         math = c(<span class="number">50</span>, <span class="number">60</span>, <span class="number">100</span>, <span class="number">20</span>),</span><br><span class="line">                         class = c(<span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">2</span>))</span><br><span class="line">df_midterm</span><br><span class="line"></span><br><span class="line">write.csv(df_midterm, file = <span class="string">"df_midterm.csv"</span>)</span><br></pre></td></tr></table></figure><h2 id="RData파일-활용하기"><a href="#RData파일-활용하기" class="headerlink" title="RData파일 활용하기"></a>RData파일 활용하기</h2><ul><li>R 전용 데이터 파일</li><li>용량 작고 빠름</li></ul><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">save(df_midterm, file = <span class="string">"df_midterm.rda"</span>)</span><br><span class="line"></span><br><span class="line">rm(df_midterm)</span><br><span class="line"></span><br><span class="line">df_midterm</span><br><span class="line"><span class="comment">## 에러: 객체 'df_midterm'를 찾을 수 없습니다</span></span><br><span class="line"></span><br><span class="line">load(<span class="string">"df_midterm.rda"</span>)</span><br><span class="line"></span><br><span class="line">df_midterm</span><br><span class="line"><span class="comment">##  english math class</span></span><br><span class="line"><span class="comment">## 1      90   50     1</span></span><br><span class="line"><span class="comment">## 2      80   60     1</span></span><br><span class="line"><span class="comment">## 3      60  100     2</span></span><br><span class="line"><span class="comment">## 4      70   20     2</span></span><br><span class="line"></span><br><span class="line"><span class="string">'</span></span><br><span class="line"><span class="string">변수에 할당</span></span><br><span class="line"><span class="string">'</span></span><br><span class="line">df_exam &lt;- read_excel(<span class="string">"excel_exam.xlsx"</span>)</span><br><span class="line">df_csv_exam &lt;- read.csv(<span class="string">"csv_exam.csv"</span>)</span><br><span class="line"></span><br><span class="line"><span class="string">'</span></span><br><span class="line"><span class="string">Rda 파일 : 데이터 프레임 자동 생성</span></span><br><span class="line"><span class="string">'</span></span><br><span class="line">load(<span class="string">"df_midterm.rda"</span>)</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>http://everydayspring.github.io/2020/07/14/R-2020-07-14-Data-Frame/#disqus_thread</comments>
    </item>
    
    <item>
      <title>hexo 게시물 이미지 삽입</title>
      <link>http://everydayspring.github.io/2020/07/14/hexo-2020-07-14-image/</link>
      <guid>http://everydayspring.github.io/2020/07/14/hexo-2020-07-14-image/</guid>
      <pubDate>Tue, 14 Jul 2020 06:26:28 GMT</pubDate>
      <description>
      
        먼저 다음과 같이 일반적인 방법으로 마크다운에 이미지를 넣고 실행하면 절대경로로 이미지가 로드되지만 게시물에 접근하는 경로에 따라 링크가 바뀌면서 사진이 뜨지 않는 경우가 생긴다.

1


!(이미지 설명)[이미지 링크]


‘_config.yml’ 설정 변경
1


post_asset_folder: true


post_asset_folder를 true로 변경하면 ‘hexo new (layout) [title]’명령어를 실행할 때마다 title과 동일한 이름의 폴더가 생성된다.

생성된 폴더에 이미지를 넣고 마크다운 문서에서 로드
      
      </description>
      
      
      <content:encoded><![CDATA[<p>먼저 다음과 같이 일반적인 방법으로 마크다운에 이미지를 넣고 실행하면 절대경로로 이미지가 로드되지만 게시물에 접근하는 경로에 따라 링크가 바뀌면서 사진이 뜨지 않는 경우가 생긴다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">!(이미지 설명)[이미지 링크]</span><br></pre></td></tr></table></figure><h2 id="‘-config-yml’-설정-변경"><a href="#‘-config-yml’-설정-변경" class="headerlink" title="‘_config.yml’ 설정 변경"></a><strong>‘_config.yml’</strong> 설정 변경</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">post_asset_folder: true</span><br></pre></td></tr></table></figure><p>post_asset_folder를 true로 변경하면 ‘hexo new (layout) [title]’명령어를 실행할 때마다 title과 동일한 이름의 폴더가 생성된다.</p><p>생성된 폴더에 이미지를 넣고 마크다운 문서에서 로드해주면 된다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% asset_img image001.JPG %&#125;</span><br></pre></td></tr></table></figure><p><em>이미지를 매번 넣는 경우가 아니라면 설정을 false로 두고 필요할때만 title과 동일한 이름으로 폴더를 생성하여 사용하는 방법도 있다.</em></p>]]></content:encoded>
      
      <comments>http://everydayspring.github.io/2020/07/14/hexo-2020-07-14-image/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Hexo 블로그에 Google AdSense 적용하기</title>
      <link>http://everydayspring.github.io/2020/07/14/hexo-2020-07-14-Google-AdSense/</link>
      <guid>http://everydayspring.github.io/2020/07/14/hexo-2020-07-14-Google-AdSense/</guid>
      <pubDate>Tue, 14 Jul 2020 05:29:24 GMT</pubDate>
      <description>
      
        사용하고 있는 테마 폴더의 ‘_config.yml’ 파일에서 애드센스 계정 설정을 해주면 된다

1
2
3
4
5
6
7
8
9


# Google AdSense unit configurations
-
    # Where should the widget be placed, left sidebar or right sidebar
    position: left
    type: adsense
    # AdSense client ID
    client_id: &#39;pub-1234567890123456&#39;
    # AdSense AD 
      
      </description>
      
      
      <content:encoded><![CDATA[<p>사용하고 있는 테마 폴더의 ‘_config.yml’ 파일에서 애드센스 계정 설정을 해주면 된다</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># Google AdSense unit configurations</span><br><span class="line">-</span><br><span class="line">    # Where should the widget be placed, left sidebar or right sidebar</span><br><span class="line">    position: left</span><br><span class="line">    type: adsense</span><br><span class="line">    # AdSense client ID</span><br><span class="line">    client_id: &#39;pub-1234567890123456&#39;</span><br><span class="line">    # AdSense AD unit ID</span><br><span class="line">    slot_id: &#39;1234567890&#39;</span><br></pre></td></tr></table></figure><h2 id="AdSense-client-id-slot-id"><a href="#AdSense-client-id-slot-id" class="headerlink" title="AdSense client_id, slot_id"></a>AdSense client_id, slot_id</h2><ul><li>웹게시자 ID : client_id</li><li>고객 ID : slot_id</li></ul>]]></content:encoded>
      
      <comments>http://everydayspring.github.io/2020/07/14/hexo-2020-07-14-Google-AdSense/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Git을 써라 제발!</title>
      <link>http://everydayspring.github.io/2020/07/14/etc-2020-07-14-PleaseGit/</link>
      <guid>http://everydayspring.github.io/2020/07/14/etc-2020-07-14-PleaseGit/</guid>
      <pubDate>Tue, 14 Jul 2020 00:24:19 GMT</pubDate>
      <description>
      
        글을 쓰게된 이유
우선 내 소개를 잠깐 해보자면 정보통신공학과를 전공했다.

졸업 후에는 1년 간 초등학생들에게 코딩을 가르쳤고 (리얼코딩, 스크래치), 현재는 대학원준비를 하면서 개발자, IT강사를 꿈꾸고 있다.

졸업 후 1년 6개월 가량 개발에 손을 떼었다가 공부를 처음부터 다시 시작해야 하는 상황이 되었다.

대학원 준비, 재취업 준비를 하면서 내가 1학년때 이걸 깨달았으면 얼마나 좋았을까 하는 것들이 있어 공유하고자 이 글을 작성하게 되었다.

Git을 써라, 쓰세요, 제발 써주세요
정확히 말하자면 Git과 클라우드 서비스
      
      </description>
      
      
      <content:encoded><![CDATA[<h3 id="글을-쓰게된-이유"><a href="#글을-쓰게된-이유" class="headerlink" title="글을 쓰게된 이유"></a>글을 쓰게된 이유</h3><p>우선 내 소개를 잠깐 해보자면 정보통신공학과를 전공했다.</p><p>졸업 후에는 1년 간 초등학생들에게 코딩을 가르쳤고 (리얼코딩, 스크래치), 현재는 대학원준비를 하면서 개발자, IT강사를 꿈꾸고 있다.</p><p>졸업 후 1년 6개월 가량 개발에 손을 떼었다가 공부를 처음부터 다시 시작해야 하는 상황이 되었다.</p><p>대학원 준비, 재취업 준비를 하면서 내가 1학년때 이걸 깨달았으면 얼마나 좋았을까 하는 것들이 있어 공유하고자 이 글을 작성하게 되었다.</p><a id="more"></a><h2 id="Git을-써라-쓰세요-제발-써주세요"><a href="#Git을-써라-쓰세요-제발-써주세요" class="headerlink" title="Git을 써라, 쓰세요, 제발 써주세요"></a>Git을 써라, 쓰세요, 제발 써주세요</h2><p>정확히 말하자면 Git과 클라우드 서비스를 많이 사용하라는 취지의 글이 될것 같은데,<br>주변에 코딩을 시작하는 신입생이 있다면 달려가서 멱살을 잡고 흔들면서 당장 GitHub에 가입하라고 해주자.</p><p><em>타임머신이 있다면 1학년때로 돌아가서 나를 가둬놓고 5일간 굶기면서 클라우드 서비스를 쓰라고 세뇌 시킬거다.</em></p><p>대학교 4년간 수업과 연구실에서 세미나를 진행하면서 참 많은 공부를 했다</p><ul><li>수업<ul><li>C언어</li><li>객체지향프로그래밍</li><li>자료구조</li><li>Java</li><li>Android</li><li>알고리즘</li><li>웹프로그래밍</li><li>데이터베이스</li></ul></li><li>세미나<ul><li>Front-end [HTML,css,JS,jQuery]</li><li>Back-end [Node.js]</li><li>Database [MySQL, PostgreSQL]</li><li>ProgrammingLanguage [C, Java, Python, DesignPattern]</li><li>Source manager [GitHub, SourceTree]</li><li>Hardware [Arduino, RaspberryPi]</li><li>Spring</li></ul></li></ul><p>운 좋게도 정말 좋은 연구실에 들어가서 다양한 분야를 경험해 볼 수 있었다. 물론 1회성 세미나도 있었고 내가 기억하지 못하는 세미나들도 많을거다.</p><p>물론 저것들을 다 할줄 아는것도 아니고 이것저것 많이 해봤다고 자랑하는 것도 아니다. 내가 말하고 싶은건 <strong>지금 나에게 남은게 하나도 없다</strong>는 점이다.</p><p>학부때는 강의실PC, 연구실PC, 노트북, 데스크탑을 옮겨가며 사용했고 쓸데없이 깔끔함이 이런데서 발휘되서 깨끗하게 지우고 다녔다. 연구실PC에 그나마 모아뒀던 자료들마저 연구실을 나오면서 다 날려버렸다. <strong>정말 뼈저리게 후회한다</strong></p><h3 id="Git이-뭔데"><a href="#Git이-뭔데" class="headerlink" title="Git이 뭔데?"></a>Git이 뭔데?</h3><p>‘Git’은 버전관리 시스템이다. 파일을 계속해서 주시하면서 모든 변화를 기록한다. Git에 올려뒀다면 코드를 작성하다가 언제든지 이전의 상태로 돌릴 수 있고, 여러명과 한 프로젝트를 작업하는데도 유용하게 쓰인다.</p><p>‘GitHub’는 클라우드에 있는 <strong>Git 제공자</strong>다. 내PC에 있는 Git 히스토리를 GitHub 웹사이트에 올려서 사용한다. GitHub를 통해서 다른사람이 내 코드를 가져갈 수도 있고 동시에 작업할 수도 있다. 물론 나도 다른사람의 코드를 확인하고 다운로드해서 활용할 수 있다.</p><h3 id="뭐가-좋아요"><a href="#뭐가-좋아요" class="headerlink" title="뭐가 좋아요?"></a>뭐가 좋아요?</h3><p>파일의 버전관리, 협업을 잠시 치워두고 코딩을 막 시작한 사람의 관점에서 보자면 <strong>Git은 포트폴리오</strong>가 된다. </p><p>이게 가장 중요한 포인트다. <strong>‘포트폴리오’</strong>가 된다! 내가 뭘배웠는지 하나하나 설명하지 않아도 GitHub를 보면 아 이사람이 이런 수업을 하고 이런 공부를 했구나를 보여줄수 있다. </p><p>따로 작성하지 않고 누구나 들어와서 볼 수있는 무료 포트폴리오가 되는 것이다. 실제로 GitHub를 보고 스카웃되는 경우도 있고, 많은 취업 이력서에 GitHub 주소를 적는 항목이 있다.</p><p><em>GitHub에 얼마나 자료가 올라가는지 기록되는 잔디밭이 초록색으로 물들어가는 것을 보면서 뿌듯해 하자!</em></p><h3 id="어떻게-쓰지-너무-어려워"><a href="#어떻게-쓰지-너무-어려워" class="headerlink" title="어떻게 쓰지 너무 어려워!"></a>어떻게 쓰지 너무 어려워!</h3><p>사실 Git을 사용하는것이 쉽지는 않다. 처음 시작하면 add, push, clone, pull, branch … 다 무슨말인지 모르겠고 협업이라도 진행하려면 프로젝트 만들고 설정까지 하고 지쳐버린다.</p><p>하지만 쓰다보면 어떻게든 익숙해지고 그게 다 자산이 된다. 사용하기 쉽지 않은 만큼 많은 사람들이 질문하고 답변한다. 포기하지 말자! <em>사실 나도 아직 잘 모르겠다 Git…</em></p><p>친절하게 한글로 되어있는 <a href="https://backlog.com/git-tutorial/kr/intro/intro1_1.html" rel="external nofollow noopener noreferrer" target="_blank">사이트</a>도 있다.</p><p>사실 코딩을 처음 시작하면 코딩하는 것보다 Git설정이 더 어렵고 오래걸린다. 정말 너무 힘들고 모르겠다면 GitHub에서 직접 파일을 업로드라도 해두자. 구글드라이브처럼 폴더를 만들고 파일들을 업로드 할 수 있다. 이런 방법으로라도 업로드 해두면 안하는 것보다 백배는 낫다!</p><p>프로그래밍 언어 강의 시간에 적은 ‘Hello World’부터 사소한 과제까지 내가 쓴 코드는 전부다!!</p><h2 id="마치며"><a href="#마치며" class="headerlink" title="마치며"></a>마치며</h2><p>Git뿐만 아니라 다양한 클라우드 서비스를 활용하자. 자료를 USB가 아닌 구글 드라이브나, 네이버 클라우드에 넣어두면 어디서든 언제든 PC,휴대폰만 있으면 확인이 가능하다. 얼마나 좋은가! <em>usb는 공인인증서가 없어질때까지만 쓰자…</em></p><p>이 블로그도 클라우드 서비스를 이용하여 만들었다. 구름IDE에서 작성하고 GitHub에 배포하면 멋진 무료 블로그가 완성된다. 컴퓨터만 있으면 <a href="https://www.goorm.io/" rel="external nofollow noopener noreferrer" target="_blank">구름웹사이트</a>에 접속해서 언제든지 글을 쓰고 블로그를 수정할 수 있다.</p><p>물론 보안상의 이유로 클라우드 서비스를 막아놓은 회사가 많지만 그럼에도 불구하고 우리는 많은 클라우드 서비스를 사용할 가치가 충분히 있다. 아무것도 설치하지 않아도 코딩을 할 수 있고, 어디서든 내 파일들을 조회할 수 있는 좋은 세상이다.</p><p>이런 주저리주저리 글로 Git을 사용해야 하는 이유가 잘 설명되었는지는 모르겠지만, 단 한 명이라도 읽고 뭔가 깨달았다면 성공이다.</p><p>지금 이 순간에도 무수히 많은 멋진 코드들이 클라우드 서비스에 올려지고 공유되고 있다. GitHub로 스카웃제의 오는 그날까지 화이팅!</p>]]></content:encoded>
      
      <comments>http://everydayspring.github.io/2020/07/14/etc-2020-07-14-PleaseGit/#disqus_thread</comments>
    </item>
    
    <item>
      <title>R 시작하기</title>
      <link>http://everydayspring.github.io/2020/07/13/R-2020-07-13-Rstart/</link>
      <guid>http://everydayspring.github.io/2020/07/13/R-2020-07-13-Rstart/</guid>
      <pubDate>Mon, 13 Jul 2020 11:51:29 GMT</pubDate>
      <description>
      
        * 통계와 그래픽을 위한 소프트웨어
 * 무료

변수 (Variable)
 * 변하는 수

소득성별학점국적1,000만 원남자3.8대한민국2,000만 원남자4.2대한민국3,000만 원여자2.6대한민국4,000만 원여자4.5대한민국소득, 성별 : 독립 변수 ( Independent Variable )학점 : 종속 변수 ( Dependent Variable )

국적 : 상수 ( Constant )

변수 생성
1
2
3
4
5
6
7
8
9
10
11


a &lt;- 1
a
## [1] 1

b &lt;- 2
b
## [1] 2

c &lt;- 3.
      
      </description>
      
      
      <content:encoded><![CDATA[<ul><li>통계와 그래픽을 위한 소프트웨어</li><li>무료</li></ul><h2 id="변수-Variable"><a href="#변수-Variable" class="headerlink" title="변수 (Variable)"></a>변수 (Variable)</h2><ul><li>변하는 수</li></ul><table><thead><tr><th align="center"><strong>소득</strong></th><th align="center"><strong>성별</strong></th><th align="center"><strong>학점</strong></th><th align="center">국적</th></tr></thead><tbody><tr><td align="center">1,000만 원</td><td align="center">남자</td><td align="center">3.8</td><td align="center">대한민국</td></tr><tr><td align="center">2,000만 원</td><td align="center">남자</td><td align="center">4.2</td><td align="center">대한민국</td></tr><tr><td align="center">3,000만 원</td><td align="center">여자</td><td align="center">2.6</td><td align="center">대한민국</td></tr><tr><td align="center">4,000만 원</td><td align="center">여자</td><td align="center">4.5</td><td align="center">대한민국</td></tr><tr><td align="center">소득, 성별 : 독립 변수 ( Independent Variable )</td><td align="center"></td><td align="center"></td><td align="center"></td></tr></tbody></table><p>학점 : 종속 변수 ( Dependent Variable )</p><p>국적 : 상수 ( Constant )</p><h3 id="변수-생성"><a href="#변수-생성" class="headerlink" title="변수 생성"></a>변수 생성</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">a &lt;- <span class="number">1</span></span><br><span class="line">a</span><br><span class="line"><span class="comment">## [1] 1</span></span><br><span class="line"></span><br><span class="line">b &lt;- <span class="number">2</span></span><br><span class="line">b</span><br><span class="line"><span class="comment">## [1] 2</span></span><br><span class="line"></span><br><span class="line">c &lt;- <span class="number">3.5</span></span><br><span class="line">c</span><br><span class="line"><span class="comment">## [1] 3.5</span></span><br></pre></td></tr></table></figure><h4 id="String"><a href="#String" class="headerlink" title="String"></a>String</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">str1 &lt;- <span class="string">"a"</span></span><br><span class="line">str1</span><br><span class="line"><span class="comment">## [1] "a"</span></span><br><span class="line"></span><br><span class="line">str2 &lt;- <span class="string">"text"</span></span><br><span class="line">str2</span><br><span class="line"><span class="comment">## [1] "text"</span></span><br><span class="line"></span><br><span class="line">str3 &lt;- <span class="string">"Hello World!"</span></span><br><span class="line">str3</span><br><span class="line"><span class="comment">## [1] "Hello World!"</span></span><br></pre></td></tr></table></figure><h3 id="변수-연산"><a href="#변수-연산" class="headerlink" title="변수 연산"></a>변수 연산</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">a+b</span><br><span class="line"><span class="comment">## [1] 3</span></span><br><span class="line"></span><br><span class="line"><span class="number">4</span>/b</span><br><span class="line"><span class="comment">## [1] 2</span></span><br><span class="line"></span><br><span class="line"><span class="number">5</span>*b</span><br><span class="line"><span class="comment">## [1] 10</span></span><br><span class="line"></span><br><span class="line">str1+<span class="number">2</span></span><br><span class="line"><span class="comment">## Error in str1 + 2: non-numeric argumant to binary operator</span></span><br></pre></td></tr></table></figure><h2 id="Vector"><a href="#Vector" class="headerlink" title="Vector"></a>Vector</h2><ul><li>c() : combine</li></ul><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">var1 &lt;- c(<span class="number">1</span>, <span class="number">2</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">8</span>)</span><br><span class="line">var1</span><br><span class="line"><span class="comment">## [1] 1 2 5 7 8</span></span><br><span class="line"></span><br><span class="line">var2 &lt;- c(<span class="number">1</span>:<span class="number">5</span>)// <span class="number">1</span>~<span class="number">5</span>까지 <span class="number">1</span>씩 증가</span><br><span class="line">var2</span><br><span class="line"><span class="comment">## [1] 1 2 3 4 5</span></span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">str4 &lt;- c(<span class="string">"a"</span>, <span class="string">"b"</span>, <span class="string">"c"</span>)</span><br><span class="line">str4</span><br><span class="line"><span class="comment">## [1] "a" "b" "c"</span></span><br><span class="line"></span><br><span class="line">str5 &lt;- c(<span class="string">"Hello!"</span>, <span class="string">"World"</span>, <span class="string">"is"</span>, <span class="string">"good!"</span>)</span><br><span class="line">str5</span><br><span class="line"><span class="comment">## [1] "Hello!" "World" "is" "good!"</span></span><br></pre></td></tr></table></figure><ul><li>seq() : sequence</li></ul><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">var3 &lt;- seq(<span class="number">1</span>,<span class="number">5</span>)// <span class="number">1</span>~<span class="number">5</span>까지 <span class="number">1</span>씩 증가</span><br><span class="line">var3</span><br><span class="line"><span class="comment">## [1] 1 2 3 4 5</span></span><br><span class="line"></span><br><span class="line">var4 &lt;- seq(<span class="number">1</span>, <span class="number">10</span>, by = <span class="number">3</span>)// <span class="number">1</span>~<span class="number">10</span>까지 <span class="number">3</span>씩 증가</span><br><span class="line">var4</span><br><span class="line"><span class="comment">## [1] 1 4 7 10</span></span><br></pre></td></tr></table></figure><h3 id="Vector-연산"><a href="#Vector-연산" class="headerlink" title="Vector 연산"></a>Vector 연산</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">var1+<span class="number">2</span></span><br><span class="line"><span class="comment">## [1] 3 4 7 9 10</span></span><br><span class="line"></span><br><span class="line">var1+var2</span><br><span class="line"><span class="comment">##[1] 2 4 8 11 13</span></span><br></pre></td></tr></table></figure><h2 id="함수"><a href="#함수" class="headerlink" title="함수"></a>함수</h2><ul><li>값을 넣으면 특정한 기능을 수행해 처음과 다른 값이 출력됨</li></ul><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">x &lt;- c(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>)</span><br><span class="line">x</span><br><span class="line"><span class="comment">## [1] 1 2 3</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 함수 적용하기</span></span><br><span class="line"></span><br><span class="line">mean(x)</span><br><span class="line"><span class="comment">## [1] 2</span></span><br><span class="line"></span><br><span class="line">max(x)</span><br><span class="line"><span class="comment">## [1] 3</span></span><br><span class="line"></span><br><span class="line">min(x)</span><br><span class="line"><span class="comment">## [1] 1</span></span><br><span class="line"></span><br><span class="line">str5</span><br><span class="line"><span class="comment">## [1] "Hello!" "World" "is" "good!"</span></span><br><span class="line"></span><br><span class="line">paste(str5, callapse = <span class="string">","</span>)</span><br><span class="line"><span class="comment">## [1] "Hello!,World,is,good!"</span></span><br><span class="line"></span><br><span class="line">paste(str5, collapse = <span class="string">" "</span>)</span><br><span class="line"><span class="comment">## [1] "Hello! World is good!"</span></span><br><span class="line"></span><br><span class="line">x_mean &lt;- mean(x)</span><br><span class="line">x_mean</span><br><span class="line"><span class="comment">## [1] 2</span></span><br><span class="line"></span><br><span class="line">str5_paste &lt;- paste(str5, collapse = <span class="string">" "</span>)</span><br><span class="line">str5_paste</span><br><span class="line"><span class="comment">## [1] "Hello! World is good!"</span></span><br></pre></td></tr></table></figure><h2 id="함수-꾸러미-‘패키지-packages-’"><a href="#함수-꾸러미-‘패키지-packages-’" class="headerlink" title="함수 꾸러미 ‘패키지(packages)’"></a>함수 꾸러미 ‘패키지(packages)’</h2><p>패키지 설치하기 &gt; 패키지 로드하기 &gt; 함수 사용하기</p><ul><li>ggplot2 패키지 설치하기, 로드하기<figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">install.packages(<span class="string">"ggplot2"</span>)// ggplot2 패키지 설치</span><br><span class="line"><span class="keyword">library</span>(ggplot2)// ggplot2 패키지 로드</span><br><span class="line"></span><br><span class="line">x &lt;- c(<span class="string">"a"</span>, <span class="string">"a"</span>, <span class="string">"b"</span>, <span class="string">"c"</span>)</span><br><span class="line">x</span><br><span class="line"></span><br><span class="line">qplot(x)    <span class="comment"># ggplot2패키지 함수</span></span><br><span class="line"></span><br><span class="line">qplot(data = mpg, x = hwy)    <span class="comment"># ggplot2 제공 데이터</span></span><br><span class="line">qplot(data = mpg, x = cty)</span><br><span class="line">qplot(data = mpg, x = drv, y = hwy)     <span class="comment"># x축, y축 지정</span></span><br><span class="line">qplot(data = mpg, x = drv, y = hwy, geom = <span class="string">"line"</span>) <span class="comment"># 그래프 형태 지정</span></span><br><span class="line">qplot(data = mpg, x = drv, y = hwy, geom = <span class="string">"boxplot"</span>)</span><br><span class="line">qplot(data = mpg, x = drv, y = hwy, geom = <span class="string">"boxplot"</span>, colour = drv)</span><br><span class="line"></span><br><span class="line">?qplot</span><br></pre></td></tr></table></figure></li></ul>]]></content:encoded>
      
      <comments>http://everydayspring.github.io/2020/07/13/R-2020-07-13-Rstart/#disqus_thread</comments>
    </item>
    
    <item>
      <title>R 언어 준비하기 (R 설치, RStudio 설치, R 스튜디오 설치)</title>
      <link>http://everydayspring.github.io/2020/07/13/R-2020-07-13-CHAPTER02/</link>
      <guid>http://everydayspring.github.io/2020/07/13/R-2020-07-13-CHAPTER02/</guid>
      <pubDate>Mon, 13 Jul 2020 10:09:09 GMT</pubDate>
      <description>
      
        R 설치
R 사이트 접속


R 다운로드 : 자신의 운영체제 선택
2020.07.14 기준 최신버전 ‘R-4.0.2.pkg’
기본설치 진행
RStudio 설치
RStudio 사이트 접속
RStudio 다운로드 : 자신의 운영체제 선택
설치 완료
      
      </description>
      
      
      <content:encoded><![CDATA[<h2 id="R-설치"><a href="#R-설치" class="headerlink" title="R 설치"></a>R 설치</h2><h3 id="R-사이트-접속"><a href="#R-사이트-접속" class="headerlink" title="R 사이트 접속"></a><a href="https://www.r-project.org/" rel="external nofollow noopener noreferrer" target="_blank">R 사이트 접속</a></h3><p><img src="2020-07-13-Ready/ready08.png" alt></p><h3 id="R-다운로드-자신의-운영체제-선택"><a href="#R-다운로드-자신의-운영체제-선택" class="headerlink" title="R 다운로드 : 자신의 운영체제 선택"></a><a href="http://healthstat.snu.ac.kr/CRAN/" rel="external nofollow noopener noreferrer" target="_blank">R 다운로드</a> : 자신의 운영체제 선택</h3><h3 id="2020-07-14-기준-최신버전-‘R-4-0-2-pkg’"><a href="#2020-07-14-기준-최신버전-‘R-4-0-2-pkg’" class="headerlink" title="2020.07.14 기준 최신버전 ‘R-4.0.2.pkg’"></a>2020.07.14 기준 최신버전 ‘R-4.0.2.pkg’</h3><h3 id="기본설치-진행"><a href="#기본설치-진행" class="headerlink" title="기본설치 진행"></a>기본설치 진행</h3><h2 id="RStudio-설치"><a href="#RStudio-설치" class="headerlink" title="RStudio 설치"></a>RStudio 설치</h2><h3 id="RStudio-사이트-접속"><a href="#RStudio-사이트-접속" class="headerlink" title="RStudio 사이트 접속"></a><a href="https://rstudio.com/" rel="external nofollow noopener noreferrer" target="_blank">RStudio 사이트 접속</a></h3><h3 id="RStudio-다운로드-자신의-운영체제-선택"><a href="#RStudio-다운로드-자신의-운영체제-선택" class="headerlink" title="RStudio 다운로드 : 자신의 운영체제 선택"></a><a href="https://rstudio.com/products/rstudio/download/" rel="external nofollow noopener noreferrer" target="_blank">RStudio 다운로드</a> : 자신의 운영체제 선택</h3><h2 id="설치-완료"><a href="#설치-완료" class="headerlink" title="설치 완료"></a>설치 완료</h2>]]></content:encoded>
      
      <comments>http://everydayspring.github.io/2020/07/13/R-2020-07-13-CHAPTER02/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Hexo 시작하기</title>
      <link>http://everydayspring.github.io/2020/07/13/hexo-2020-07-13-HexoStart/</link>
      <guid>http://everydayspring.github.io/2020/07/13/hexo-2020-07-13-HexoStart/</guid>
      <pubDate>Mon, 13 Jul 2020 06:40:07 GMT</pubDate>
      <description>
      
        준비하기
 * 구름IDE 가입
 * github 가입

구름IDE 컨테이너 만들기
 * 로그인
 * 대시보드 -&gt; 새 컨테이너 생성
 * 소프트웨어 스택 ‘Node.js’ 선택

hexo 설치
1
2
3
4
5
6


$ npm install -g npm // npm 버전 업그레이드
$ npm install hexo-cli -g
$ hexo init hexoblog

$ cd hexoblog
$ npm install


hexo 테마 다운로드
1
2


$ cd themes
$ git clone [원하는 테마의 github 링크]

      
      </description>
      
      
      <content:encoded><![CDATA[<h2 id="준비하기"><a href="#준비하기" class="headerlink" title="준비하기"></a>준비하기</h2><ul><li><a href="https://ide.goorm.io/" rel="external nofollow noopener noreferrer" target="_blank">구름IDE 가입</a></li><li><a href="https://github.com/" rel="external nofollow noopener noreferrer" target="_blank">github 가입</a></li></ul><h2 id="구름IDE-컨테이너-만들기"><a href="#구름IDE-컨테이너-만들기" class="headerlink" title="구름IDE 컨테이너 만들기"></a>구름IDE 컨테이너 만들기</h2><ul><li>로그인</li><li>대시보드 -&gt; 새 컨테이너 생성</li><li>소프트웨어 스택 ‘Node.js’ 선택</li></ul><h2 id="hexo-설치"><a href="#hexo-설치" class="headerlink" title="hexo 설치"></a>hexo 설치</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g npm // npm 버전 업그레이드</span><br><span class="line">$ npm install hexo-cli -g</span><br><span class="line">$ hexo init hexoblog</span><br><span class="line"></span><br><span class="line">$ <span class="built_in">cd</span> hexoblog</span><br><span class="line">$ npm install</span><br></pre></td></tr></table></figure><h2 id="hexo-테마-다운로드"><a href="#hexo-테마-다운로드" class="headerlink" title="hexo 테마 다운로드"></a>hexo 테마 다운로드</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> themes</span><br><span class="line">$ git <span class="built_in">clone</span> [원하는 테마의 github 링크]</span><br></pre></td></tr></table></figure><h2 id="hexo-테마-적용"><a href="#hexo-테마-적용" class="headerlink" title="hexo 테마 적용"></a>hexo 테마 적용</h2><ul><li>_config.yml</li></ul><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Extensions</span></span><br><span class="line"><span class="comment">## Plugins: https://hexo.io/plugins/</span></span><br><span class="line"><span class="comment">## Themes: https://hexo.io/themes/</span></span><br><span class="line"><span class="attr">theme:</span> <span class="string">[clone한</span> <span class="string">폴더명]</span></span><br></pre></td></tr></table></figure><h2 id="글-작성하기"><a href="#글-작성하기" class="headerlink" title="글 작성하기"></a>글 작성하기</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new post <span class="string">'title'</span></span><br></pre></td></tr></table></figure><h2 id="구름IDE에서-호스팅하기"><a href="#구름IDE에서-호스팅하기" class="headerlink" title="구름IDE에서 호스팅하기"></a>구름IDE에서 호스팅하기</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server -p 3000</span><br></pre></td></tr></table></figure><h2 id="Github-repository-생성"><a href="#Github-repository-생성" class="headerlink" title="Github repository 생성"></a>Github repository 생성</h2><p>‘[github_id].github.io’ 로 새로운 repository를 생성합니다</p><h2 id="Github-연동"><a href="#Github-연동" class="headerlink" title="Github 연동"></a>Github 연동</h2><ul><li>_config.yml<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># Deployment</span><br><span class="line">## Docs: https:&#x2F;&#x2F;hexo.io&#x2F;docs&#x2F;deployment.html</span><br><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: [생성한 git repository 주소 (.io까지)]</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure></li></ul><h2 id="Github-배포"><a href="#Github-배포" class="headerlink" title="Github 배포"></a>Github 배포</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.name [내 이름]</span><br><span class="line">$ git config --global user.email [github 계정]</span><br><span class="line"></span><br><span class="line">$ hexo clean<span class="comment"># 수정내역이 적용 안되는 경우 한번씩 청소해주는 역할</span></span><br><span class="line">$ hexo generate</span><br><span class="line">$ hexo deploy</span><br><span class="line"></span><br><span class="line">$ hexo deploy --generate<span class="comment"># generate와 deploy 한번에 실행</span></span><br></pre></td></tr></table></figure><p>참고 : <a href="https://www.youtube.com/watch?v=8uRgIwgumqA" rel="external nofollow noopener noreferrer" target="_blank">유튜브</a></p>]]></content:encoded>
      
      <comments>http://everydayspring.github.io/2020/07/13/hexo-2020-07-13-HexoStart/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Hello World</title>
      <link>http://everydayspring.github.io/2020/07/13/hexo-hello-world/</link>
      <guid>http://everydayspring.github.io/2020/07/13/hexo-hello-world/</guid>
      <pubDate>Mon, 13 Jul 2020 04:40:07 GMT</pubDate>
      <description>
      
        Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.

Quick Start
Create a new post
1


$ hexo new &quot;My New Post&quot;


More info: Writing

Run server
1


$ hexo s
      
      </description>
      
      
      <content:encoded><![CDATA[<p>Welcome to <a href="https://hexo.io/" rel="external nofollow noopener noreferrer" target="_blank">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" rel="external nofollow noopener noreferrer" target="_blank">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" rel="external nofollow noopener noreferrer" target="_blank">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" rel="external nofollow noopener noreferrer" target="_blank">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" rel="external nofollow noopener noreferrer" target="_blank">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" rel="external nofollow noopener noreferrer" target="_blank">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" rel="external nofollow noopener noreferrer" target="_blank">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" rel="external nofollow noopener noreferrer" target="_blank">Deployment</a></p>]]></content:encoded>
      
      <comments>http://everydayspring.github.io/2020/07/13/hexo-hello-world/#disqus_thread</comments>
    </item>
    
  </channel>
</rss>
